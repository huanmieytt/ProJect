public class demo {
    public static void main(String[] args) {

        StringBuffer buf = new StringBuffer();

        //INC关联的逻辑 先提出来 免得sql写一坨
        buf.append(" WITH INCZHZD AS ");
        buf.append("  (SELECT C_T_CODE, C_S_CODE ");
        buf.append("     FROM T_V_D_GROUP_DETAIL B ");
        buf.append("     JOIN (SELECT C_GROUP_CODE_P, C_GROUP_CODE ");
        buf.append("            FROM T_V_D_GROUP A ");
        buf.append("           START WITH A.C_GROUP_CODE_P = '[root]' ");
        buf.append("                  AND A.C_GROUP_CODE = 'ZHBZINC' ");
        buf.append("          CONNECT BY PRIOR A.C_GROUP_CODE = A.C_GROUP_CODE_P) C ");
        buf.append("       ON B.C_GROUP_CODE = C.C_GROUP_CODE), ");
        buf.append("  ");
        buf.append(" TISZHZD AS ");
        buf.append("  (SELECT C_T_CODE, C_S_CODE ");
        buf.append("     FROM T_V_D_GROUP_DETAIL B ");
        buf.append("     JOIN (SELECT C_GROUP_CODE_P, C_GROUP_CODE ");
        buf.append("            FROM T_V_D_GROUP A ");
        buf.append("           START WITH A.C_GROUP_CODE_P = '[root]' ");
        buf.append("                  AND A.C_GROUP_CODE = 'ZHDMTISM' ");
        buf.append("          CONNECT BY PRIOR A.C_GROUP_CODE = A.C_GROUP_CODE_P) C ");
        buf.append("       ON B.C_GROUP_CODE = C.C_GROUP_CODE), ");

        buf.append("       JNZHZQHZM AS ( ");
        buf.append("       		SELECT ");
        buf.append("       		C_T_CODE, ");
        buf.append("       			C_S_CODE  ");
        buf.append("       		FROM ");
        buf.append("       		T_V_D_GROUP_DETAIL B ");
        buf.append("       		JOIN ( ");
        buf.append("       		SELECT ");
        buf.append("       		C_GROUP_CODE_P, ");
        buf.append("       			C_GROUP_CODE  ");
        buf.append("       		FROM ");
        buf.append("       T_V_D_GROUP A START WITH A.C_GROUP_CODE_P = '[root]'  ");
        buf.append("       AND A.C_GROUP_CODE = 'JNZHZQHZM' CONNECT BY PRIOR A.C_GROUP_CODE = A.C_GROUP_CODE_P  ");
        buf.append("       ) C ON B.C_GROUP_CODE = C.C_GROUP_CODE  ");
        buf.append("       ), ");
        buf.append("       CACODE_JNZH AS ( ");
        buf.append("       SELECT DISTINCT ");
        buf.append("       	portCode, ");
        buf.append("       	c_t_code, ");
        buf.append("       	ASTDATE  ");
        buf.append("       FROM ");
        buf.append("       ( ");
        buf.append("       SELECT ");
        buf.append("       	c_t_code, ");
        buf.append("       	C_S_CODE, ");
        buf.append("       	ast.c_port_code AS portCode, ");
        buf.append("       	ast.d_aststat AS ASTDATE  ");
        buf.append("       FROM ");
        buf.append("       	T_V_D_GROUP_DETAIL B ");
        buf.append("       	JOIN ( ");
        buf.append("       SELECT ");
        buf.append("       	C_GROUP_CODE_P, ");
        buf.append("       	C_GROUP_CODE  ");
        buf.append("       	FROM ");
        buf.append("       		T_V_D_GROUP A START WITH A.C_GROUP_CODE_P = '[root]'  ");
        buf.append("       	AND A.C_GROUP_CODE = 'JNZHZQHZM' CONNECT BY PRIOR A.C_GROUP_CODE = A.C_GROUP_CODE_P  ");
        buf.append("       		) C ON B.C_GROUP_CODE = C.C_GROUP_CODE ");
        buf.append("       		JOIN ( SELECT DISTINCT c_ca_code, c_port_code, d_aststat FROM t_r_fr_aststat WHERE c_port_code IN ( SELECT * FROM TABLE(?) ) AND d_aststat = ?) ast ON ast.c_ca_code = b.c_s_code  ");
        buf.append("       			)  ");
        buf.append("  )");

		/*大致理解：存款账户设置了TIS转换字典的话  就做证券化处理;  设置了INC币种,就转币种_INC; 否则就到币种
		 保证金 ,备付金账户 设置了TIS转换处理的话 就做证券化处理;  否则直接转到币种_INC;
		 综上： 关联TIS做证券化处理的时候,不区分账户类型;
		  存款账户关联不到INC的话 进币种,关联到了进币种_INC;
		  备付金，保证金账户不做关联 应该就是不能证券化的账户都做币种_INC处理
		 账户不会同时存在 */

        /**
         * STORY #111960 导出的positionfile文件接口对所有境内资产汇总为一条实现证券化 (#2 #1 )
         *  精外数据拆分规则：若为1类 and 券所在市场为境外，则为境外数据
         * 2，3 类币种写了两个关联条件：一。交易账户为境外，二。词汇字典：JNZHZQHZM 有维护或者币种不为人民币，则为境外
         * 境外数据导出规则按照原逻辑
         */

        //基于原逻辑格式化好的sql
        buf.append("        select * from (        ");
        buf.append(" SELECT T.ZMDM || '|' AS ZMDM, ");
        buf.append("        T.ZQID || '|' AS ZQID, ");
        buf.append("        T.TZFX || '|' AS TZFX, ");
        buf.append("        T.BWBSZ || '|' AS BWBSZ, ");
        buf.append("        TO_CHAR(T.RQ, 'yyyyMMdd') || '|' AS RQ, ");
        buf.append("        T.LXYB || '|' AS LXYB, ");
        buf.append("        T.LXBWB || '|' AS LXBWB, ");
        buf.append("        T.SL || '|' AS SL, ");
        buf.append("        T.TISMA || '|' AS TISMA, ");
        buf.append("        T.BWBCB || '|' AS BWBCB, ");
        buf.append("        T.DWCB || '|' AS DWCB, ");
        buf.append("        '' || '|' AS UN1, ");
        buf.append("        '' || '|' AS UN2, ");
        buf.append("        '' || '|' AS UN3, ");
        buf.append("        '' || '|' AS UN4, ");
        buf.append("        '' || '|' AS UN5, ");
        buf.append("        '' || '|' AS UN6, ");
        buf.append("        '' || '|' AS UN7 ");
        buf.append("   FROM (SELECT * ");

        // 1类数据  证券化
        buf.append("           FROM (SELECT * ");
        buf.append("                   FROM (SELECT * ");
        buf.append("                           FROM (SELECT 1 AS SX, ");
        buf.append("                                        ZQ.ZMDM AS ZMDM, ");
        buf.append("                                        ZQ.ZQID AS ZQID, ");
//		buf.append("                                        CASE ");
//		buf.append("                                          WHEN ZQ.SL > 0 THEN ");
//		buf.append("                                           'L' ");
//		buf.append("                                          ELSE ");
//		buf.append("                                           'S' ");
//		buf.append("                                        END AS TZFX, ");
        buf.append("                                        ZQ.TZFX AS TZFX, ");
        buf.append("                                        ZQ.BWBSZ AS BWBSZ, ");
        buf.append("                                        ZQ.RQ AS RQ, ");
        buf.append("                                        ZQ.LXYB AS LXYB, ");
        buf.append("                                        ZQ.LXBWB AS LXBWB, ");
        buf.append("                                        ZQ.SL AS SL, ");
        buf.append("                                        ZQ.TISMA AS TISMA, ");
        buf.append("                                        ZQ.BWBCB AS BWBCB, ");
        buf.append("                                        ZQ.DWCB AS DWCB ");
        buf.append("                                   FROM (SELECT * ");
        buf.append("                                   FROM (SELECT TO_CHAR(SUM(BWBSZ), 'fm9999999999999999999990.00') AS BWBSZ, ");
        buf.append("                                       			TO_CHAR(SUM(LXYB), 'fm99999999999990.0000000000') AS LXYB, ");
        buf.append("                                       			TO_CHAR(SUM(LXBWB), 'fm9999999999999999999990.00') AS LXBWB, ");
        buf.append("                                       			TO_CHAR(SUM(BWBCB), 'fm9999999999999999999990.00') AS BWBCB, ");
//		buf.append("                                       			TO_CHAR((SUM(BWBCB)/DECODE(SUM(AMOUNT),0,1,SUM(AMOUNT))), 'fm999999999990.000000000000') AS DWCB, ");
        buf.append("                                       			TO_CHAR( DECODE((SUM(BWBCB)/DECODE(SUM(AMOUNT),0,1,SUM(AMOUNT))),SUM(BWBCB),1,(SUM(BWBCB)/DECODE(SUM(AMOUNT),0,1,SUM(AMOUNT)))),'fm999999999990.000000000000')AS DWCB, ");
        buf.append("                                       			ZMDM,RQ,SUM(SL) AS SL,TISMA,ZQID,TZFX");
        buf.append("                                           FROM (SELECT A.C_PORT_CODE AS ZMDM, ");
//		buf.append("                                                        CASE ");
//		buf.append("                                                          WHEN A.C_DV_ISSUE_MODE IN ");
//		buf.append("                                                               ('WSS_WX_FGKXS', ");
//		buf.append("                                                                'WSS_WS_DZSX', ");
//		buf.append("                                                                'WSS_WX_ZLPSXS', ");
//		buf.append("                                                                'WSS_WX_KCBXGSD') THEN ");
//		buf.append("                                                           SMZH.C_T_CODE ");
//		buf.append("                                                          ELSE ");
        buf.append("                                                           NVL(SEC.C_SM_CODE, ");
        buf.append("                                                               A.C_SEC_CODE) ");
        buf.append("                                                        	 AS ZQID, ");
//		buf.append("                                                        CASE ");
//		buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE ");
//		buf.append("                                                               'HG%' THEN ");
//		buf.append("                                                           TO_CHAR(A.N_PORT_MV, ");
//		buf.append("                                                                   'fm9999999999999999999990.00') ");
//		buf.append("                                                          ELSE ");
//		buf.append("                                                           TO_CHAR(A.N_PORT_MV * ");
//		buf.append("                                                                   N_WAY, ");
//		buf.append("                                                                   'fm9999999999999999999990.00') ");
//		buf.append("                                                        END AS BWBSZ, ");
        buf.append("                                                         CASE WHEN SEC.C_SEC_VAR_CODE LIKE ");
        buf.append("                                                               'HG%' THEN ");
        buf.append("                                                         		 A.N_PORT_MV  ");
        buf.append("                                                          			ELSE ");
        buf.append("                                                         		  A.N_PORT_MV * N_WAY END ");
        buf.append("                                                              	AS BWBSZ, ");
        buf.append("                                                        A.D_ASTSTAT AS RQ, ");
//		buf.append("                                                        TO_CHAR(NVL(B.N_ORIG_MV, 0), ");
//		buf.append("                                                                'fm99999999999990.0000000000') AS LXYB, ");
        buf.append("                                                            NVL(B.N_ORIG_MV, 0) AS   LXYB , ");
//		buf.append("                                                        TO_CHAR(NVL(B.N_PORT_MV, 0), ");
//		buf.append("                                                                'fm9999999999999999999990.00') AS LXBWB, ");
        buf.append("                                                            NVL(B.N_PORT_MV, 0) AS   LXBWB , ");
        buf.append("                                                        CASE ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE ");
        buf.append("                                                               'HG%' THEN ");
        buf.append("                                                           A.N_PORT_COST ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE ");
        buf.append("                                                               'ZQ%' THEN ");
        buf.append("                                                           A.N_AMOUNT * SEC.N_FV_ISSUE ");
        buf.append("                                                          ELSE ");
        buf.append("                                                           A.N_AMOUNT ");
        buf.append("                                                        END AS SL, ");
        buf.append("                                                         CASE WHEN (CASE ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE ");
        buf.append("                                                               'HG%' THEN ");
        buf.append("                                                           A.N_PORT_COST ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE ");
        buf.append("                                                               'ZQ%' THEN ");
        buf.append("                                                           A.N_AMOUNT * SEC.N_FV_ISSUE ");
        buf.append("                                                          ELSE ");
        buf.append("                                                           A.N_AMOUNT ");
        buf.append("                                                        END) > 0 THEN 'L' ELSE 'S' END AS TZFX, ");
//		buf.append("                                                        CASE ");
//		buf.append("                                                          WHEN A.C_DV_ISSUE_MODE IN ");
//		buf.append("                                                               ('WSS_WX_FGKXS', ");
//		buf.append("                                                                'WSS_WS_DZSX', ");
//		buf.append("                                                                'WSS_WX_ZLPSXS', ");
//		buf.append("                                                                'WSS_WX_KCBXGSD') THEN ");
//		buf.append("                                                           SMZH.C_T_CODE ");
//		buf.append("                                                          ELSE ");
        buf.append("                                                           NVL(SEC.C_SM_CODE, ");
        buf.append("                                                               A.C_SEC_CODE) ");
        buf.append("                                                        	 AS TISMA, ");
//		buf.append("                                                        CASE ");
//		buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE ");
//		buf.append("                                                               'HG%' THEN ");
//		buf.append("                                                           TO_CHAR(A.N_PORT_COST, ");
//		buf.append("                                                                   'fm9999999999999999999990.00') ");
//		buf.append("                                                          ELSE ");
//		buf.append("                                                           TO_CHAR(A.N_PORT_COST * ");
//		buf.append("                                                                   A.N_WAY, ");
//		buf.append("                                                                   'fm9999999999999999999990.00') ");
//		buf.append("                                                        END AS BWBCB, ");
        buf.append("                                                          CASE WHEN SEC.C_SEC_VAR_CODE LIKE ");
        buf.append("                                                               'HG%' THEN ");
        buf.append("                                                           	A.N_PORT_COST  ");
        buf.append("                                                         		 ELSE ");
        buf.append("                                                           A.N_PORT_COST * ");
        buf.append("                                                                  A.N_WAY  ");
        buf.append("                                                        	END AS BWBCB, ");
        buf.append("                                                        CASE ");
        buf.append("                                                                  WHEN SEC.C_SEC_VAR_CODE LIKE ");
        buf.append("                                                                       'ZQ%' THEN ");
        buf.append("                                                                   A.N_PORT_COST * A.N_WAY / ");
        buf.append("                                                                   DECODE(A.N_AMOUNT, ");
        buf.append("                                                                          0, ");
        buf.append("                                                                          1, ");
        buf.append("                                                                          A.N_AMOUNT) ");
        buf.append("                                                                  WHEN SEC.C_SEC_VAR_CODE LIKE ");
        buf.append("                                                                       'HG%' THEN ");
        buf.append("                                                                   1 ");
        buf.append("                                                                  ELSE ");
        buf.append("                                                                   A.N_PORT_COST * A.N_WAY / ");
        buf.append("                                                                   DECODE(A.N_AMOUNT, ");
        buf.append("                                                                          0, ");
        buf.append("                                                                          1, ");
        buf.append("                                                                          A.N_AMOUNT) ");
        buf.append("                                                                END");
        buf.append("                                                               AS DWCB, ");
        buf.append("                                                            	 SEC.C_SEC_VAR_CODE AS SEC_VAR_CODE , ");
        buf.append("                                                             	DECODE(A.N_AMOUNT, ");
        buf.append("                                                                        0, ");
        buf.append("                                                                        0, ");
        buf.append("                                                                A.N_AMOUNT)  AS AMOUNT");
        buf.append("                                                   FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                   LEFT JOIN T_P_SV_SEC_BASE SEC ON A.C_SEC_CODE = SEC.C_SEC_CODE ");
        buf.append("                                 JOIN T_P_BI_MKT MKT ON SEC.C_MKT_CODE = MKT.C_MKT_CODE  	AND MKT.C_AREA_CODE <> 'CHN' ");
        buf.append("                                                   LEFT JOIN (SELECT * ");
        buf.append("                                                               FROM T_V_D_GROUP_DETAIL B ");
        buf.append("                                                               JOIN (SELECT C_GROUP_CODE_P, C_GROUP_CODE ");
        buf.append("                                                                      FROM T_V_D_GROUP A ");
        buf.append("                                                                     START WITH A.C_GROUP_CODE_P = '[root]' ");
        buf.append("                                                                            AND A.C_GROUP_CODE = 'XSGZQDMSMM' ");
        buf.append("                                                                            AND A.N_CHECK_STATE = 1 ");
        buf.append("                                                                    CONNECT BY PRIOR ");
        buf.append("                                                                                A.C_GROUP_CODE = A.C_GROUP_CODE_P) C ");
        buf.append("                                                                 ON B.C_GROUP_CODE = C.C_GROUP_CODE ");
        buf.append("                                                                AND B.N_CHECK_STATE = 1) SMZH ");
        buf.append("                                                     ON SMZH.C_S_CODE = SEC.C_SEC_CODE ");
        buf.append("                                                   LEFT JOIN (SELECT C_PORT_CODE, ");
        buf.append("                                                                    C_SEC_CODE, ");
        buf.append("                                                                    C_DTA_CODE, ");
        buf.append("                                                                    C_DV_ISSUE_MODE, ");
        buf.append("                                                                    C_DV_INVEST_CLS, ");
        buf.append("                                                                    CASE ");
        buf.append("                                                                      WHEN C_SEC_VAR_CODE LIKE 'HG%' THEN ");
        buf.append("                                                                       N_ORIG_MV ");
        buf.append("                                                                      ELSE ");
        buf.append("                                                                       N_ORIG_MV * N_WAY ");
        buf.append("                                                                    END AS N_ORIG_MV, ");
        buf.append("                                                                    CASE ");
        buf.append("                                                                      WHEN C_SEC_VAR_CODE LIKE 'HG%' THEN ");
        buf.append("                                                                       N_PORT_MV ");
        buf.append("                                                                      ELSE ");
        buf.append("                                                                       N_PORT_MV * N_WAY ");
        buf.append("                                                                    END AS N_PORT_MV, ");
        buf.append("                                                                    C_DAI_CODE ");
        buf.append("                                                               FROM T_R_FR_ASTSTAT ");
        buf.append("                                                              WHERE C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                                AND D_ASTSTAT = ? ");
        buf.append("                                                                AND C_DAI_CODE IN ('YSLX_ZQ', 'YFLX_ZQ', 'YSK_GL') ");
        buf.append("                                                                AND TRIM(C_SEC_CODE) IS NOT NULL) B ");
        buf.append("                                                     ON A.C_PORT_CODE = B.C_PORT_CODE ");
        buf.append("                                                    AND A.C_SEC_CODE = B.C_SEC_CODE ");
        buf.append("                                                    AND A.C_DTA_CODE = B.C_DTA_CODE ");
        buf.append("                                                    AND A.C_DV_ISSUE_MODE = B.C_DV_ISSUE_MODE ");
        buf.append("                                                    AND A.C_DV_INVEST_CLS = B.C_DV_INVEST_CLS ");
        buf.append("                                                  WHERE A.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                    AND A.D_ASTSTAT = ? ");
        buf.append("                                                    AND A.C_DAI_CODE IN ('ZQTZ_CB', 'MRFSJRZC', 'MCHGJRZC', 'YSGJ_CB') ");
        buf.append("                                                    AND CASE ");
        buf.append("                                                          WHEN (A.C_DAI_CODE = 'MCHGJRZC' AND B.C_DAI_CODE = 'YSLX_ZQ')  ");
        buf.append("                                                               OR ");
        buf.append("                                                               (A.C_DAI_CODE = 'MRFSJRZC' AND B.C_DAI_CODE = 'YFLX_ZQ') THEN ");
        buf.append("                                                           0 ");
        buf.append("                                                          ELSE ");
        buf.append("                                                           1 ");
        buf.append("                                                        END = 1)");
        buf.append("                                                        group by  ZMDM,ZQID,RQ,TISMA,TZFX,SEC_VAR_CODE ");
        //应收股利 应收利息没有成本科目的时候 也需要支持导出
        buf.append("                                                 UNION ALL ");
        buf.append("                                   					 SELECT TO_CHAR(SUM(BWBSZ),'fm9999999999999999999990.00') AS BWBSZ, ");
        buf.append("                                       			TO_CHAR(SUM(LXYB), 'fm99999999999990.0000000000') AS LXYB, ");
        buf.append("                                       			TO_CHAR(SUM(LXBWB), 'fm9999999999999999999990.00') AS LXBWB, ");
        buf.append("                                       			TO_CHAR(SUM(BWBCB), 'fm9999999999999999999990.00') AS BWBCB, ");
//		buf.append("                                       			TO_CHAR((SUM(BWBCB)/DECODE(SUM(amount),0,1,SUM(amount))), 'fm999999999990.000000000000') AS DWCB, ");
        buf.append("                                       			TO_CHAR( DECODE((SUM(BWBCB)/DECODE(SUM(AMOUNT),0,1,SUM(AMOUNT))),SUM(BWBCB),1,(SUM(BWBCB)/DECODE(SUM(AMOUNT),0,1,SUM(AMOUNT)))),'fm999999999990.000000000000')AS DWCB, ");
        buf.append("                                       			ZMDM,RQ,SUM(SL) AS SL,TISMA,ZQID,TZFX");
        buf.append("                                                 FROM (SELECT A.C_PORT_CODE AS ZMDM, ");
//		buf.append("                                                        CASE ");
//		buf.append("                                                          WHEN A.C_DV_ISSUE_MODE IN ('WSS_WX_FGKXS', 'WSS_WS_DZSX', 'WSS_WX_ZLPSXS', 'WSS_WX_KCBXGSD') THEN ");
//		buf.append("                                                           SMZH.C_T_CODE ");
//		buf.append("                                                          ELSE ");
        buf.append("                                                           NVL(SEC.C_SM_CODE, A.C_SEC_CODE) ");
        buf.append("                                                        	AS ZQID, ");
//		buf.append("                                                        CASE ");
//		buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN ");
//		buf.append("                                                           TO_CHAR(0, 'fm9999999999999999999990.00') ");
//		buf.append("                                                          ELSE ");
//		buf.append("                                                           TO_CHAR(0, 'fm9999999999999999999990.00') ");
//		buf.append("                                                        END AS BWBSZ, ");
        buf.append("                                                        CASE ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN ");
        buf.append("                                                         			 0 ");
        buf.append("                                                          ELSE ");
        buf.append("                                                         			 0 ");
        buf.append("                                                        END AS BWBSZ, ");
        buf.append("                                                        A.D_ASTSTAT AS RQ, ");
//		buf.append("                                                        TO_CHAR(NVL(A.N_ORIG_MV, 0), 'fm99999999999990.0000000000') AS LXYB, ");
        buf.append("                                                        NVL(A.N_ORIG_MV, 0) AS LXYB, ");
//		buf.append("                                                        TO_CHAR(NVL(A.N_PORT_MV, 0), 'fm9999999999999999999990.00') AS LXBWB, ");
        buf.append("                                                        NVL(A.N_PORT_MV, 0) AS LXBWB, ");
        buf.append("                                                        CASE ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN ");
        buf.append("                                                           A.N_PORT_COST ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE 'ZQ%' THEN ");
        buf.append("                                                           A.N_AMOUNT * SEC.N_FV_ISSUE ");
        buf.append("                                                          ELSE ");
        buf.append("                                                           A.N_AMOUNT ");
        buf.append("                                                        END AS SL, ");
        buf.append("                                                         CASE WHEN (CASE ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN ");
        buf.append("                                                           A.N_PORT_COST ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE 'ZQ%' THEN ");
        buf.append("                                                           A.N_AMOUNT * SEC.N_FV_ISSUE ");
        buf.append("                                                          ELSE ");
        buf.append("                                                           A.N_AMOUNT ");
        buf.append("                                                        END) > 0 THEN 'L' ELSE 'S' END AS TZFX, ");
//		buf.append("                                                        CASE ");
//		buf.append("                                                          WHEN A.C_DV_ISSUE_MODE IN ");
//		buf.append("                                                               ('WSS_WX_FGKXS', 'WSS_WS_DZSX', 'WSS_WX_ZLPSXS', 'WSS_WX_KCBXGSD') THEN ");
//		buf.append("                                                           SMZH.C_T_CODE ");
//		buf.append("                                                          ELSE ");
        buf.append("                                                           NVL(SEC.C_SM_CODE, A.C_SEC_CODE) ");
        buf.append("                                                        	 AS TISMA, ");
//		buf.append("                                                        CASE ");
//		buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN ");
//		buf.append("                                                           TO_CHAR(0, 'fm9999999999999999999990.00') ");
//		buf.append("                                                          ELSE ");
//		buf.append("                                                           TO_CHAR(0, 'fm9999999999999999999990.00') ");
//		buf.append("                                                        END AS BWBCB, ");
        buf.append("                                                        CASE ");
        buf.append("                                                          WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN ");
        buf.append("                                                          		 0 ");
        buf.append("                                                          ELSE ");
        buf.append("                                                         		 0 ");
        buf.append("                                                        END AS BWBCB, ");
		/*buf.append("                                                        TO_CHAR(CASE ");
		buf.append("                                                                  WHEN SEC.C_SEC_VAR_CODE LIKE 'ZQ%' THEN A.N_PORT_COST * A.N_WAY / DECODE(A.N_AMOUNT, 0, 1,  A.N_AMOUNT) ");
		buf.append("                                                                  WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN 1 ");
		buf.append("                                                                  ELSE A.N_PORT_COST * A.N_WAY / DECODE(A.N_AMOUNT, 0, 1, A.N_AMOUNT) ");
		buf.append("                                                                END, 'fm999999999990.000000000000') DWCB ");*/
        buf.append("                                                        1 AS DWCB, ");
        buf.append("                                                        SEC.C_SEC_VAR_CODE AS SEC_VAR_CODE , ");
        buf.append("                                                        DECODE(A.N_AMOUNT, ");
        buf.append("                                                                        0, ");
        buf.append("                                                                        0, ");
        buf.append("                                                                A.N_AMOUNT)  AS AMOUNT");
        buf.append("                                                   FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                   LEFT JOIN T_P_SV_SEC_BASE SEC ON A.C_SEC_CODE =  SEC.C_SEC_CODE ");
        buf.append("                                 JOIN T_P_BI_MKT MKT ON SEC.C_MKT_CODE = MKT.C_MKT_CODE  	AND MKT.C_AREA_CODE <> 'CHN' ");
        buf.append("                                                   LEFT JOIN (SELECT * ");
        buf.append("                                                               FROM T_V_D_GROUP_DETAIL B ");
        buf.append("                                                               JOIN (SELECT C_GROUP_CODE_P, C_GROUP_CODE ");
        buf.append("                                                                      FROM T_V_D_GROUP A ");
        buf.append("                                                                     START WITH A.C_GROUP_CODE_P = '[root]' ");
        buf.append("                                                                            AND A.C_GROUP_CODE = 'XSGZQDMSMM' ");
        buf.append("                                                                            AND A.N_CHECK_STATE = 1 ");
        buf.append("                                                                    CONNECT BY PRIOR ");
        buf.append("                                                                                A.C_GROUP_CODE = ");
        buf.append("                                                                                A.C_GROUP_CODE_P) C ");
        buf.append("                                                                 ON B.C_GROUP_CODE =  C.C_GROUP_CODE ");
        buf.append("                                                                AND B.N_CHECK_STATE = 1) SMZH ");
        buf.append("                                                     ON SMZH.C_S_CODE =  SEC.C_SEC_CODE ");
        buf.append("                                                  WHERE A.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                    AND A.D_ASTSTAT = ? ");
        buf.append("                                                    AND A.C_DAI_CODE IN ('YSLX_ZQ', 'YFLX_ZQ', 'YSK_GL') ");
        buf.append("                                                    AND NOT EXISTS ");
        buf.append("                                                  (SELECT 1 ");
        buf.append("                                                           FROM T_R_FR_ASTSTAT B ");
        buf.append("                                                          WHERE A.C_PORT_CODE = B.C_PORT_CODE ");
        buf.append("                                                            AND A.C_SEC_CODE = B.C_SEC_CODE ");
        buf.append("                                                            AND A.C_DTA_CODE = B.C_DTA_CODE ");
        buf.append("                                                            AND A.C_DV_ISSUE_MODE = B.C_DV_ISSUE_MODE ");
        buf.append("                                                            AND A.C_DV_INVEST_CLS = B.C_DV_INVEST_CLS ");
        buf.append("                                                            AND A.D_ASTSTAT = B.D_ASTSTAT ");
        buf.append("                                                            AND B.C_DAI_CODE IN ('ZQTZ_CB', 'MRFSJRZC', 'MCHGJRZC', 'YSGJ_CB')))group by  ZMDM,ZQID,RQ,TISMA,TZFX,SEC_VAR_CODE ");
        buf.append("                                           ORDER BY ZMDM, ZQID ))ZQ ");
        buf.append("                         UNION ALL ");
        buf.append("                         SELECT * ");
        buf.append("                           FROM (SELECT 1 AS SX, ");
        buf.append("                                        NVL(A.C_PORT_CODE, B.C_PORT_CODE) AS ZMDM, ");
        buf.append("                                        NVL(A.TISMA, B.TISMA) AS ZQID, ");
        buf.append("                                        'L' AS TZFX, ");
        buf.append("                                        TO_CHAR(NVL(A.N_PORT_MV, 0), 'fm9999999999999999999990.00') AS BWBSZ, ");
        buf.append("                                        NVL(A.D_ASTSTAT, B.D_ASTSTAT) AS RQ, ");
        buf.append("                                        TO_CHAR(NVL(B.N_ORIG_MV, 0), 'fm99999999999990.0000000000') AS LXYB, ");
        buf.append("                                        TO_CHAR(NVL(B.N_PORT_MV, 0), 'fm9999999999999999999990.00') AS LXBWB, ");
        buf.append("                                        NVL(A.N_PORT_COST, 0) AS SL, ");
        buf.append("                                        NVL(A.TISMA, B.TISMA) AS TISMA, ");
        buf.append("                                        TO_CHAR(NVL(A.N_PORT_COST, 0), 'fm9999999999999999999990.00') AS BWBCB, ");
        buf.append("                                        TO_CHAR(1, 'fm999999999990.000000000000') AS DWCB ");
        buf.append("                                   FROM (SELECT A.C_PORT_CODE, ");
        buf.append("                                                TIS.C_T_CODE AS TISMA, ");
        buf.append("                                                D_ASTSTAT, ");
        buf.append("                                                SUM(NVL(N_PORT_MV * N_WAY, 0)) AS N_PORT_MV, ");
        buf.append("                                                SUM(NVL(N_PORT_COST * N_WAY, 0)) AS N_PORT_COST ");
        buf.append("                                           FROM T_R_FR_ASTSTAT A ");
        buf.append("                                           JOIN TISZHZD TIS ON A.C_CA_CODE = TIS.C_S_CODE ");
        buf.append("      JOIN ( SELECT c_ca_code FROM T_P_BI_CASH_ACC WHERE C_DV_ACC_NATURE <> 'NA_INT' ) acc ON a.c_ca_code = acc.c_ca_code  ");
        buf.append("      	LEFT JOIN T_D_AI_VAL_PR PR ON A.C_PORT_CODE = PR.C_PORT_CODE  ");
        buf.append("                                          WHERE A.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                            AND D_ASTSTAT = ? ");
        buf.append("                                            AND C_DAI_CODE = 'HBZJ' ");
        buf.append("                                            AND C_NAV_TYPE = 'CACH' ");
        buf.append("                                            AND TRIM(A.C_CA_CODE) IS NOT NULL ");
        buf.append("                                          GROUP BY A.C_PORT_CODE, D_ASTSTAT, C_T_CODE) A ");
        buf.append("                                   FULL JOIN (SELECT C_PORT_CODE, ");
        buf.append("                                                    D_ASTSTAT, ");
        buf.append("                                                    TIS.C_T_CODE AS TISMA, ");
        buf.append("                                                    SUM(N_ORIG_MV * N_WAY) AS N_ORIG_MV, ");
        buf.append("                                                    SUM(N_PORT_MV * N_WAY) AS N_PORT_MV ");
        buf.append("                                               FROM T_R_FR_ASTSTAT A ");
        buf.append("                                               JOIN TISZHZD TIS ON A.C_CA_CODE = TIS.C_S_CODE ");
        buf.append("       JOIN ( SELECT c_ca_code FROM T_P_BI_CASH_ACC WHERE C_DV_ACC_NATURE <> 'NA_INT' ) acc ON a.c_ca_code = acc.c_ca_code ");
        buf.append("                                              WHERE C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                AND D_ASTSTAT = ? ");
        buf.append("                                                AND C_DAI_CODE = 'YSLX_ZJ' ");
        buf.append("                                                AND C_NAV_TYPE = 'CACH_SEC' ");
        buf.append("                                                AND TRIM(A.C_CA_CODE) IS NOT NULL ");
        buf.append("                                              GROUP BY C_PORT_CODE,  D_ASTSTAT, C_T_CODE) B ");
        buf.append("                                     ON A.C_PORT_CODE = B.C_PORT_CODE ");
        buf.append("                                    AND A.TISMA = B.TISMA ");
        buf.append("                                  ORDER BY A.C_PORT_CODE, ZQID)) ");
        buf.append("                  ORDER BY ZMDM, ZQID, TZFX)) ");
        buf.append("          ");

        // 2类数据  币种
        buf.append("         UNION ALL ");
        buf.append("         SELECT * ");
        buf.append("           FROM (SELECT * ");
        buf.append("                   FROM (SELECT * ");
        buf.append("                           FROM (SELECT 2 AS SX, ");
        buf.append("                                        C_PORT_CODE AS ZMDM, ");
        buf.append("                                        C_DC_CODE AS ZQID, ");
        buf.append("                                        'L' AS TZFX, ");
        buf.append("                                        TO_CHAR(N_PORT_MV, 'fm9999999999999999999990.00') AS BWBSZ, ");
        buf.append("                                        D_ASTSTAT AS RQ, ");
        buf.append("                                        TO_CHAR(N_ORIG_MV_LX, 'fm99999999999990.0000000000') AS LXYB, ");
        buf.append("                                        TO_CHAR(N_PORT_MV_LX, 'fm9999999999999999999990.00') AS LXBWB, ");
        buf.append("                                        N_ORIG_MV AS SL, ");
        buf.append("                                        C_DC_CODE AS TISMA, ");
        buf.append("                                        TO_CHAR(N_PORT_COST, 'fm9999999999999999999990.00') AS BWBCB, ");
        buf.append("                                        TO_CHAR(N_ORIG_MV / DECODE(N_PORT_MV, 0, 1, N_PORT_MV), 'fm999999999990.000000000000') DWCB ");
        buf.append("                                   FROM (SELECT NVL(A.C_PORT_CODE, NVL(B.C_PORT_CODE,  C.C_PORT_CODE)) C_PORT_CODE, ");
        buf.append("                                                NVL(A.C_DC_CODE, NVL(B.C_DC_CODE, C.C_DC_CODE)) C_DC_CODE, ");
        buf.append("                                                NVL(A.D_ASTSTAT, NVL(B.D_ASTSTAT, C.D_ASTSTAT)) D_ASTSTAT, ");
        buf.append("                                                NVL(B.N_PORT_MV + NVL(D.N_SELL_MONEY, 0), 0) AS N_PORT_MV, ");
        buf.append("                                                NVL(B.N_ORIG_MV + NVL(D.N_ORIG_MONEY, 0), 0) AS N_ORIG_MV, ");
        buf.append("                                                NVL(B.N_PORT_COST + NVL(D.N_SELL_MONEY, 0), 0) AS N_PORT_COST, ");
        buf.append("                                                NVL(C.N_ORIG_MV, 0) AS N_ORIG_MV_LX, ");
        buf.append("                                                NVL(C.N_PORT_MV, 0) AS N_PORT_MV_LX ");
        buf.append("                                           FROM (SELECT DISTINCT C_PORT_CODE, ");
        buf.append("                                                                 NVL(F.C_T_CODE, A.C_DC_CODE) AS C_DC_CODE, ");
        buf.append("                                                                 D_ASTSTAT ");
        buf.append("                                                   FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                   LEFT JOIN TISZHZD TIS ON A.C_CA_CODE = TIS.C_S_CODE ");
        buf.append("                                                   LEFT JOIN INCZHZD F ON A.C_CA_CODE = F.C_S_CODE ");
        buf.append("                      JOIN ( SELECT c_ca_code FROM T_P_BI_CASH_ACC WHERE C_DV_ACC_NATURE <> 'NA_INT' ) acc ON a.c_ca_code = acc.c_ca_code ");
        buf.append("                                                  WHERE C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");

        buf.append("                                                    AND D_ASTSTAT = ? ");
        buf.append("                                                    AND C_DAI_CODE = 'HBZJ' ");
        buf.append("                                                    AND C_NAV_TYPE = 'CACH' ");
        buf.append("                                                    AND C_DV_ACC_TYPE NOT LIKE '%EX_RES%' ");
        buf.append("                                                    AND C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%' ");
        buf.append("                                                    AND TRIM(A.C_CA_CODE) IS NOT NULL ");
        buf.append("                                                    AND TRIM(TIS.C_T_CODE) IS NULL ");
        buf.append("                                                    AND TRIM(F.C_T_CODE) IS NULL) A ");
        //这里取关联不到的数据 关联的数据会转成INC 需要考虑和3大类的数据进行合并 同一个INC币种的只能展示一条 并且显示在下面
        buf.append("                                           FULL JOIN (SELECT SUM(0 + (CASE WHEN C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK') THEN N_PORT_MV * N_WAY ");
        buf.append("                                                                  ELSE ");
        buf.append("                                                                   N_PORT_MV * N_WAY * -1 ");
        buf.append("                                                                END)) AS N_PORT_MV, ");
        buf.append("                                                            SUM(0 + (CASE WHEN C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK') THEN N_ORIG_MV * N_WAY ");
        buf.append("                                                                  ELSE ");
        buf.append("                                                                   N_ORIG_MV * N_WAY * -1 ");
        buf.append("                                                                END)) AS N_ORIG_MV, ");
        buf.append("                                                            SUM(0 + (CASE WHEN C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK') THEN N_PORT_COST * N_WAY ");
        buf.append("                                                                  ELSE ");
        buf.append("                                                                   N_PORT_COST * N_WAY * -1 ");
        buf.append("                                                                END)) AS N_PORT_COST, ");
        buf.append("                                                            C_PORT_CODE, ");
        buf.append("                                                            C_DC_CODE, ");
        buf.append("                                                            D_ASTSTAT ");
        buf.append("                                                       FROM (SELECT A.C_PORT_CODE, ");
        buf.append("                                                                    A.D_ASTSTAT, ");
        buf.append("                                                                    A.N_WAY, ");
        buf.append("                                                                    A.C_DAI_CODE, ");
        buf.append("                                                                    A.N_PORT_MV, ");
        buf.append("                                                                    A.N_ORIG_MV, ");
        buf.append("                                                                    A.N_PORT_COST, ");
        buf.append("                                                                    NVL(F.C_T_CODE, A.C_DC_CODE) AS C_DC_CODE ");
        buf.append("                                                               FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                               LEFT JOIN TISZHZD TIS  ON A.C_CA_CODE = TIS.C_S_CODE ");
        buf.append("                                                               LEFT JOIN INCZHZD F  ON A.C_CA_CODE = F.C_S_CODE ");
        buf.append("                                    LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE ");
        buf.append("                                                              WHERE C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                       AND a.c_dc_code <> 'CNY'  AND ZQZM.c_t_code IS NULL  ");
        buf.append("                                                                AND D_ASTSTAT = ? ");
        buf.append("                                                                AND C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK', 'YFK_SHK', 'YFK_SHF') ");
        buf.append("                                                                AND C_DV_ACC_TYPE NOT LIKE '%EX_RES%' ");
        buf.append("                                                                AND C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%' ");
        buf.append("                                                                AND TRIM(TIS.C_T_CODE) IS NULL ");
        buf.append("                                                                AND TRIM(F.C_T_CODE) IS NULL) ");
        buf.append("                                                      GROUP BY C_PORT_CODE, C_DC_CODE, D_ASTSTAT) B ");
        buf.append("                                             ON A.C_PORT_CODE = B.C_PORT_CODE ");
        buf.append("                                            AND A.C_DC_CODE = B.C_DC_CODE ");
        buf.append("                                           FULL JOIN (SELECT A.C_PORT_CODE, ");
        buf.append("                                                            A.C_DC_CODE, ");
        buf.append("                                                            A.D_ASTSTAT, ");
        buf.append("                                                            SUM(N_ORIG_MV * N_WAY) AS N_ORIG_MV, ");
        buf.append("                                                            SUM(N_PORT_MV * N_WAY) AS N_PORT_MV ");
        buf.append("                                                       FROM (SELECT A.C_PORT_CODE, ");
        buf.append("                                                                    A.D_ASTSTAT, ");
        buf.append("                                                                    A.N_WAY, ");
        buf.append("                                                                    A.C_DAI_CODE, ");
        buf.append("                                                                    A.N_PORT_MV, ");
        buf.append("                                                                    A.N_ORIG_MV, ");
        buf.append("                                                                    A.N_PORT_COST, ");
        buf.append("                                                                    NVL(F.C_T_CODE, A.C_DC_CODE) AS C_DC_CODE ");
        buf.append("                                                               FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                               LEFT JOIN TISZHZD TIS ON A.C_CA_CODE = TIS.C_S_CODE ");
        buf.append("                                                               LEFT JOIN INCZHZD F ON A.C_CA_CODE = F.C_S_CODE ");
        buf.append("                                    LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE ");
        buf.append("                                                              WHERE A.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                                AND A.D_ASTSTAT = ? ");
        buf.append("                                                                AND A.C_DAI_CODE = 'YSLX_ZJ' ");
        buf.append("                                                                AND A.C_DV_ACC_TYPE NOT LIKE '%EX_RES%' ");
        buf.append("                                                                AND A.C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%' ");
        buf.append("                       AND a.c_dc_code <> 'CNY'  AND ZQZM.c_t_code IS NULL  ");
        buf.append("                                                                AND TRIM(TIS.C_T_CODE) IS NULL ");
        buf.append("                                                                AND TRIM(F.C_T_CODE) IS NULL) A ");
        buf.append("                                                      GROUP BY C_PORT_CODE, C_DC_CODE, D_ASTSTAT) C ");
        buf.append("                                             ON A.C_PORT_CODE = C.C_PORT_CODE ");
        buf.append("                                            AND A.C_DC_CODE = C.C_DC_CODE ");
        buf.append("                                           FULL JOIN (SELECT TA.C_PORT_CODE, ");
        buf.append("                                                            TA.C_DC_CODE, ");
        buf.append("                                                            SUM(ROUND(TA.N_SELL_MONEY * ");
        buf.append("                                                                      NVL(TO_NUMBER(PKG_FUN_F_EXPRESS.F_EXPRESS(TA.C_RATE_EXPR)), ");
        buf.append("                                                                          1), ");
        buf.append("                                                                      2)) AS N_SELL_MONEY, ");
        buf.append("                                                            SUM(TA.N_SELL_MONEY) AS N_ORIG_MONEY ");
        buf.append("                                                       FROM (SELECT TA.C_PORT_CODE, ");
        buf.append("                                                                    TA.N_SELL_MONEY, ");
        buf.append("                                                                    PR.C_RATE_EXPR, ");
        buf.append("                                                                    NVL(F.C_T_CODE, TA.C_DC_CODE) AS C_DC_CODE ");
        buf.append("                                                               FROM T_D_AC_SELL_TA TA ");
        buf.append("                   JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON TA.C_CA_CODE_SETT = ACC.C_CA_CODE  AND ACC.C_DV_ACC_NATURE <> 'NA_INT'   ");
        buf.append("                                                               LEFT JOIN INCZHZD F ON TA.C_CA_CODE_SETT = F.C_S_CODE ");
        buf.append("                                                               LEFT JOIN T_D_AI_VAL_PR PR ON TA.C_PORT_CODE = PR.C_PORT_CODE ");
        buf.append("                                                                AND D_VAL_ACCT = ? ");
        buf.append("                                                                AND C_PR_TYPE = 'R' ");
        buf.append("                                                                AND NVL(TA.C_DC_CODE, 'CNY') = PR.C_VAL_PR_CODE ");
        buf.append("                                                               LEFT JOIN T_P_AB_PORT PORT ON TA.C_PORT_CODE = PORT.C_PORT_CODE ");
        buf.append("                                                              WHERE TA.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                                AND C_DS_CODE = 'TAXS_SG' ");
        buf.append("                                                                AND D_SETT = PKG_FUN_GETDAY_HDAY.GETDAY_HDAY(PORT.C_HDAY_CODE, ?, 1, 'W') ");
        buf.append("                                                                AND D_CONFIRM != D_SETT ");
        buf.append("                                                                AND TRIM(F.C_T_CODE) IS NULL) TA ");
        buf.append("                                                      GROUP BY TA.C_PORT_CODE, TA.C_DC_CODE) D ");
        buf.append("                                             ON A.C_PORT_CODE = D.C_PORT_CODE ");
        buf.append("                                            AND A.C_DC_CODE = D.C_DC_CODE) ");
        buf.append("                                  ORDER BY C_PORT_CODE, ZQID) ");
        buf.append("                         UNION ALL ");
        buf.append("                         SELECT * ");
        buf.append("                           FROM (SELECT DISTINCT 2 AS SX, ");
        buf.append("                                                 ZMDM, ");
        buf.append("                                                 ZQID, ");
        buf.append("                                                 TZFX, ");
        buf.append("                                                 BWBSZ, ");
        buf.append("                                                 RQ, ");
        buf.append("                                                 LXYB, ");
        buf.append("                                                 LXBWB, ");
        buf.append("                                                 SL, ");
        buf.append("                                                 TISMA, ");
        buf.append("                                                 BWBCB, ");
        buf.append("                                                 DWCB ");
        buf.append("                                   FROM (SELECT R.C_PORT_CODE AS ZMDM, ");
        buf.append("                                                NVL(F.C_T_CODE, A.C_DC_CODE) AS ZQID, ");
        buf.append("                                                'L' AS TZFX, ");
        buf.append("                                                '0' AS BWBSZ, ");
        buf.append("                                                ? AS RQ, ");
        buf.append("                                                '0' AS LXYB, ");
        buf.append("                                                '0' AS LXBWB, ");
        buf.append("                                                0 AS SL, ");
        buf.append("                                                NVL(D.C_T_CODE, A.C_DC_CODE) AS TISMA, ");
        buf.append("                                                '0' AS BWBCB, ");
        buf.append("                                                '0' AS DWCB ");
        buf.append("                                           FROM T_P_BI_CASH_ACC A ");
        buf.append("                                           JOIN T_P_AB_PORT_RELA R ");
        buf.append("                                             ON R.C_RELA_TYPE = 'RELA_CASH_ACC' ");
        buf.append("                                            AND R.N_CHECK_STATE = 1 ");
        buf.append("                                            AND R.C_RELA_CODE = A.C_CA_CODE ");
        buf.append("                                           LEFT JOIN TISZHZD D  ON A.C_CA_CODE = D.C_S_CODE ");
        buf.append("                                           LEFT JOIN INCZHZD F ON A.C_CA_CODE = F.C_S_CODE ");
        buf.append("                                          WHERE A.N_CHECK_STATE = 1 ");
        buf.append("                   AND a.C_DV_ACC_NATURE <> 'NA_INT' ");
        buf.append("                                            AND R.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                            AND TRIM(F.C_T_CODE) IS NULL ");
        buf.append("                                            AND C_DC_CODE NOT IN ");
        buf.append("                                                (SELECT DISTINCT C_DC_CODE ");
        buf.append("                                                   FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                  WHERE A.C_PORT_CODE = ");
        buf.append("                                                        R.C_PORT_CODE ");
        buf.append("                                                    AND D_ASTSTAT = ? ");
        buf.append("                                                    AND (TRIM(C_CA_CODE) IS NOT NULL OR ");
        buf.append("                                                        (C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK', 'YSK_SGK', 'YFK_SHK', 'YFK_SHF', 'YSLX_ZJ')  ");
        buf.append("                                                        AND C_DV_ACC_TYPE NOT LIKE '%EX_RES%'  ");
        buf.append("                                                        AND C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%')))) ");
        buf.append("                                  ORDER BY ZMDM, ZQID)) ");
        buf.append("                  ORDER BY ZMDM, ZQID) ");
        buf.append("          ");
        // 将原来2类数据拆出来一部分 原来2部分数据的数据 若是能关联的到转换字典 就会变成INC数据 这种数据 需要和原来的3类数据做合并处理  币种_INC
        buf.append("         UNION ALL ");
        buf.append("         SELECT SX, ");
        buf.append("                ZMDM, ");
        buf.append("                ZQID, ");
        buf.append("                TZFX, ");
        buf.append("                TO_CHAR(SUM(BWBSZ), 'fm9999999999999999999990.00') AS BWBSZ, ");
        buf.append("                RQ, ");
        buf.append("                TO_CHAR(SUM(LXYB), 'fm99999999999990.0000000000') AS LXYB, ");
        buf.append("                TO_CHAR(SUM(LXBWB), 'fm9999999999999999999990.00') AS LXBWB, ");
        buf.append("                SUM(SL), ");
        buf.append("                TISMA, ");
        buf.append("                TO_CHAR(SUM(BWBCB), 'fm9999999999999999999990.00') AS BWBCB, ");
        buf.append("                TO_CHAR(SUM(SL) / SUM(BWBCB), 'fm999999999990.000000000000') DWCB ");
        buf.append("           FROM (SELECT * ");
        buf.append("                   FROM (SELECT * ");
        buf.append("                           FROM (SELECT * ");
        buf.append("                                   FROM (SELECT 3 AS SX, ");
        buf.append("                                                C_PORT_CODE AS ZMDM, ");
        buf.append("                                                C_DC_CODE AS ZQID, ");
        buf.append("                                                'L' AS TZFX, ");
        buf.append("                                                N_PORT_MV AS BWBSZ, ");
        buf.append("                                                D_ASTSTAT AS RQ, ");
        buf.append("                                                N_ORIG_MV_LX AS LXYB, ");
        buf.append("                                                N_PORT_MV_LX AS LXBWB, ");
        buf.append("                                                N_ORIG_MV AS SL, ");
        buf.append("                                                C_DC_CODE AS TISMA, ");
        buf.append("                                                N_PORT_COST AS BWBCB, ");
        buf.append("                                                N_ORIG_MV / DECODE(N_PORT_MV, 0, 1, N_PORT_MV) DWCB ");
        buf.append("                                           FROM (SELECT NVL(A.C_PORT_CODE,  NVL(B.C_PORT_CODE, C.C_PORT_CODE)) C_PORT_CODE, ");
        buf.append("                                                        NVL(A.C_DC_CODE, NVL(B.C_DC_CODE,  C.C_DC_CODE)) C_DC_CODE, ");
        buf.append("                                                        NVL(A.D_ASTSTAT, NVL(B.D_ASTSTAT, C.D_ASTSTAT)) D_ASTSTAT, ");
        buf.append("                                                        NVL(B.N_PORT_MV + NVL(D.N_SELL_MONEY, 0), 0) AS N_PORT_MV, ");
        buf.append("                                                        NVL(B.N_ORIG_MV + NVL(D.N_ORIG_MONEY, 0), 0) AS N_ORIG_MV, ");
        buf.append("                                                        NVL(B.N_PORT_COST +  NVL(D.N_SELL_MONEY, 0), 0) AS N_PORT_COST, ");
        buf.append("                                                        NVL(C.N_ORIG_MV, 0) AS N_ORIG_MV_LX, ");
        buf.append("                                                        NVL(C.N_PORT_MV, 0) AS N_PORT_MV_LX ");
        buf.append("                                                   FROM (SELECT DISTINCT C_PORT_CODE, ");
        buf.append("                                                                         CASE ");
        buf.append("                                                                           WHEN C_DV_ACC_TYPE LIKE ");
        buf.append("                                                                                '%EX_RES%' OR ");
        buf.append("                                                                                C_DV_ACC_TYPE LIKE ");
        buf.append("                                                                                '%ACC_TD_BAIL%' THEN ");
        buf.append("                                                                            A.C_DC_CODE || ");
        buf.append("                                                                            '_INC' ");
        buf.append("                                                                           ELSE ");
        buf.append("                                                                            F.C_T_CODE ");
        buf.append("                                                                         END AS C_DC_CODE, ");
        buf.append("                                                                         D_ASTSTAT ");
        buf.append("                                                           FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                           LEFT JOIN INCZHZD F ON A.C_CA_CODE = F.C_S_CODE ");
        buf.append("                                                           LEFT JOIN TISZHZD TIS ON A.C_CA_CODE = TIS.C_S_CODE ");
        buf.append("                                          LEFT  JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON A.C_CA_CODE = ACC.C_CA_CODE  ");
        buf.append("                                                          WHERE C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                            AND D_ASTSTAT = ? ");
        buf.append("                                                            AND C_DAI_CODE = 'HBZJ' ");
        buf.append("                                                            AND C_NAV_TYPE = 'CACH' ");
        buf.append("                           AND a.c_dc_code <> 'CNY'  AND ACC.C_DV_ACC_NATURE <> 'NA_INT'  ");
        //  INC 设置对备付金 保证金账户没毛用  有没有都是入币种_INC
        buf.append("                                                            AND ((a.C_DV_ACC_TYPE NOT LIKE '%EX_RES%' AND a.C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%' AND ");
        buf.append("                                                                TRIM(a.C_CA_CODE) IS NOT NULL AND ");
        buf.append("                                                                TRIM(F.C_T_CODE) IS NOT NULL)  ");
        buf.append("                                                                OR ");
        buf.append("                                                                ((a.C_DV_ACC_TYPE LIKE '%EX_RES%' OR a.C_DV_ACC_TYPE LIKE '%ACC_TD_BAIL%') AND ");
        buf.append("                                                                TRIM(TIS.C_T_CODE) IS NULL))) A ");
        buf.append("                                                   FULL JOIN (SELECT SUM(0 + (CASE ");
        buf.append("                                                                          WHEN C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK') THEN N_PORT_MV * ");
        buf.append("                                                                           N_WAY ");
        buf.append("                                                                          ELSE ");
        buf.append("                                                                           N_PORT_MV * N_WAY * -1 ");
        buf.append("                                                                        END)) AS N_PORT_MV, ");
        buf.append("                                                                    SUM(0 + (CASE ");
        buf.append("                                                                          WHEN C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK') THEN ");
        buf.append("                                                                           N_ORIG_MV * N_WAY ");
        buf.append("                                                                          ELSE ");
        buf.append("                                                                           N_ORIG_MV * N_WAY * -1 ");
        buf.append("                                                                        END)) AS N_ORIG_MV, ");
        buf.append("                                                                    SUM(0 + (CASE ");
        buf.append("                                                                          WHEN C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK') THEN ");
        buf.append("                                                                           N_PORT_COST * N_WAY ");
        buf.append("                                                                          ELSE ");
        buf.append("                                                                           N_PORT_COST * N_WAY * -1 ");
        buf.append("                                                                        END)) AS N_PORT_COST, ");
        buf.append("                                                                    C_PORT_CODE, ");
        buf.append("                                                                    C_DC_CODE, ");
        buf.append("                                                                    D_ASTSTAT ");
        buf.append("                                                               FROM (SELECT A.C_PORT_CODE, ");
        buf.append("                                                                            A.D_ASTSTAT, ");
        buf.append("                                                                            A.N_WAY, ");
        buf.append("                                                                            A.C_DAI_CODE, ");
        buf.append("                                                                            A.N_PORT_MV, ");
        buf.append("                                                                            A.N_ORIG_MV, ");
        buf.append("                                                                            A.N_PORT_COST, ");
        buf.append("                                                                            CASE ");
        buf.append("                                                                              WHEN C_DV_ACC_TYPE LIKE ");
        buf.append("                                                                                   '%EX_RES%' OR ");
        buf.append("                                                                                   C_DV_ACC_TYPE LIKE ");
        buf.append("                                                                                   '%ACC_TD_BAIL%' THEN ");
        buf.append("                                                                               A.C_DC_CODE || ");
        buf.append("                                                                               '_INC' ");
        buf.append("                                                                              ELSE ");
        buf.append("                                                                               F.C_T_CODE ");
        buf.append("                                                                            END AS C_DC_CODE ");
        buf.append("                                                                       FROM T_R_FR_ASTSTAT A ");
        buf.append("                                       LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE  ");
        buf.append("         LEFT  JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON A.C_CA_CODE = ACC.C_CA_CODE ");
        buf.append("                                                                       LEFT JOIN INCZHZD F ");
        buf.append("                                                                         ON A.C_CA_CODE = ");
        buf.append("                                                                            F.C_S_CODE ");
        buf.append("                                                                       LEFT JOIN TISZHZD TIS ON A.C_CA_CODE = TIS.C_S_CODE ");

        buf.append("                                                                      WHERE C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("   AND a.c_dc_code <> 'CNY'  AND ZQZM.c_t_code IS NULL ");

        buf.append("                                                                        AND D_ASTSTAT = ? ");
        buf.append("                                                                        AND C_DAI_CODE IN ('HBZJ', 'ZQQSK', 'ZQQSK_SQK', 'YFK_SHK', 'YFK_SHF') ");
        // INC 设置对备付金 保证金账户没毛用  有没有都是入币种_INC
        buf.append("                                                                        AND ((a.C_DV_ACC_TYPE NOT LIKE '%EX_RES%' AND ");
        buf.append("                                                                            a.C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%' AND ");
        buf.append("                                                                            TRIM(F.C_T_CODE) IS NOT NULL) OR ");
        buf.append("                                                                            ((a.C_DV_ACC_TYPE LIKE '%EX_RES%' OR ");
        buf.append("                                                                            a.C_DV_ACC_TYPE LIKE '%ACC_TD_BAIL%' AND ACC.C_DV_ACC_NATURE <> 'NA_INT' )  AND ");
        buf.append("                                                                            TRIM(TIS.C_T_CODE) IS NULL))) ");
        buf.append("                                                              GROUP BY C_PORT_CODE, ");
        buf.append("                                                                       C_DC_CODE, ");
        buf.append("                                                                       D_ASTSTAT) B ");
        buf.append("                                                     ON A.C_PORT_CODE = ");
        buf.append("                                                        B.C_PORT_CODE ");
        buf.append("                                                    AND A.C_DC_CODE = B.C_DC_CODE ");
        buf.append("                                                   FULL JOIN (SELECT A.C_PORT_CODE, ");
        buf.append("                                                                    A.C_DC_CODE, ");
        buf.append("                                                                    A.D_ASTSTAT, ");
        buf.append("                                                                    SUM(N_ORIG_MV * N_WAY) AS N_ORIG_MV, ");
        buf.append("                                                                    SUM(N_PORT_MV * N_WAY) AS N_PORT_MV ");
        buf.append("                                                               FROM (SELECT A.C_PORT_CODE, ");
        buf.append("                                                                            A.D_ASTSTAT, ");
        buf.append("                                                                            A.N_WAY, ");
        buf.append("                                                                            A.C_DAI_CODE, ");
        buf.append("                                                                            A.N_PORT_MV, ");
        buf.append("                                                                            A.N_ORIG_MV, ");
        buf.append("                                                                            A.N_PORT_COST, ");
        buf.append("                                                                            CASE ");
        buf.append("                                                                              WHEN C_DV_ACC_TYPE LIKE '%EX_RES%' OR C_DV_ACC_TYPE LIKE '%ACC_TD_BAIL%' THEN ");
        buf.append("                                                                               A.C_DC_CODE || '_INC' ");
        buf.append("                                                                              ELSE ");
        buf.append("                                                                               F.C_T_CODE ");
        buf.append("                                                                            END AS C_DC_CODE ");
        buf.append("                                                                       FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                                       LEFT JOIN INCZHZD F ON A.C_CA_CODE = F.C_S_CODE ");
        buf.append("                                                                       LEFT JOIN TISZHZD TIS  ON A.C_CA_CODE = TIS.C_S_CODE ");
        buf.append("                               LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE ");
        buf.append("                  LEFT  JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON A.C_CA_CODE = ACC.C_CA_CODE ");
        buf.append("                                                                      WHERE A.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                    AND a.c_dc_code <> 'CNY'  AND ZQZM.c_t_code IS NULL  ");
        buf.append("                                                                        AND A.D_ASTSTAT = ? ");
        buf.append("                                                                        AND A.C_DAI_CODE = 'YSLX_ZJ' ");
        buf.append("                                                                        AND ((a.C_DV_ACC_TYPE NOT LIKE '%EX_RES%' AND  ");
        buf.append("                                                                              a.C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%' AND ");
        buf.append("                                                                              TRIM(F.C_T_CODE) IS NOT NULL)  ");
        buf.append("                                                                            OR ");
        buf.append("                                                                            ((a.C_DV_ACC_TYPE LIKE '%EX_RES%' OR a.C_DV_ACC_TYPE LIKE '%ACC_TD_BAIL%'  AND ACC.C_DV_ACC_NATURE <> 'NA_INT') AND ");
        buf.append("                                                                            TRIM(TIS.C_T_CODE) IS NULL))) A ");
        buf.append("                                                              GROUP BY C_PORT_CODE, ");
        buf.append("                                                                       C_DC_CODE, ");
        buf.append("                                                                       D_ASTSTAT) C ");
        buf.append("                                                     ON A.C_PORT_CODE = ");
        buf.append("                                                        C.C_PORT_CODE ");
        buf.append("                                                    AND A.C_DC_CODE = C.C_DC_CODE ");
        buf.append("                                                   FULL JOIN (SELECT TA.C_PORT_CODE, ");
        buf.append("                                                                    TA.C_DC_CODE, ");
        buf.append("                                                                    SUM(ROUND(TA.N_SELL_MONEY * NVL(TO_NUMBER(PKG_FUN_F_EXPRESS.F_EXPRESS(TA.C_RATE_EXPR)), 1), 2)) AS N_SELL_MONEY, ");
        buf.append("                                                                    SUM(TA.N_SELL_MONEY) AS N_ORIG_MONEY ");
        buf.append("                                                               FROM (SELECT TA.C_PORT_CODE, ");
        buf.append("                                                                            TA.N_SELL_MONEY, ");
        buf.append("                                                                            PR.C_RATE_EXPR, ");
        buf.append("                                                                            NVL(F.C_T_CODE, TA.C_DC_CODE) AS C_DC_CODE ");
        buf.append("                                                                       FROM T_D_AC_SELL_TA TA ");
        buf.append("                                                                       LEFT JOIN INCZHZD F ON TA.C_CA_CODE_SETT = F.C_S_CODE ");
        buf.append("                          JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON TA.C_CA_CODE_SETT = ACC.C_CA_CODE  AND ACC.C_DV_ACC_NATURE <> 'NA_INT' ");
        buf.append("                                                                       LEFT JOIN T_D_AI_VAL_PR PR ");
        buf.append("                                                                         ON TA.C_PORT_CODE = PR.C_PORT_CODE ");
        buf.append("                                                                        AND D_VAL_ACCT = ? ");
        buf.append("                                                                        AND C_PR_TYPE = 'R' ");
        buf.append("                                                                        AND NVL(TA.C_DC_CODE, 'CNY') = PR.C_VAL_PR_CODE ");
        buf.append("                                                                       LEFT JOIN T_P_AB_PORT PORT ");
        buf.append("                                                                         ON TA.C_PORT_CODE = PORT.C_PORT_CODE ");
        buf.append("                                                                      WHERE TA.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                                        AND C_DS_CODE = 'TAXS_SG' ");
        buf.append("                                                                        AND D_SETT = PKG_FUN_GETDAY_HDAY.GETDAY_HDAY(PORT.C_HDAY_CODE, ?, 1, 'W') ");
        buf.append("                                                                        AND D_CONFIRM != D_SETT ");
        buf.append("                                                                        AND TRIM(F.C_T_CODE) IS NOT NULL) TA ");
        buf.append("                                                              GROUP BY TA.C_PORT_CODE, ");
        buf.append("                                                                       TA.C_DC_CODE) D ");
        buf.append("                                                     ON A.C_PORT_CODE = D.C_PORT_CODE ");
        buf.append("                                                    AND A.C_DC_CODE = D.C_DC_CODE) ");
        buf.append("                                          ORDER BY C_PORT_CODE, ZQID) ");
        buf.append("                                 UNION ALL ");
        buf.append("                                 SELECT * ");
        buf.append("                                   FROM (SELECT DISTINCT 3 AS SX, ");
        buf.append("                                                         ZMDM, ");
        buf.append("                                                         ZQID, ");
        buf.append("                                                         TZFX, ");
        buf.append("                                                         BWBSZ, ");
        buf.append("                                                         RQ, ");
        buf.append("                                                         LXYB, ");
        buf.append("                                                         LXBWB, ");
        buf.append("                                                         SL, ");
        buf.append("                                                         TISMA, ");
        buf.append("                                                         BWBCB, ");
        buf.append("                                                         DWCB ");
        buf.append("                                           FROM (SELECT R.C_PORT_CODE AS ZMDM, ");
        buf.append("                                                        NVL(F.C_T_CODE, ");
        buf.append("                                                            A.C_DC_CODE) AS ZQID, ");
        buf.append("                                                        'L' AS TZFX, ");
        buf.append("                                                        0 AS BWBSZ, ");
        buf.append("                                                        ? AS RQ, ");
        buf.append("                                                        0 AS LXYB, ");
        buf.append("                                                        0 AS LXBWB, ");
        buf.append("                                                        0 AS SL, ");
        buf.append("                                                        NVL(D.C_T_CODE, A.C_DC_CODE) AS TISMA, ");
        buf.append("                                                        0 AS BWBCB, ");
        buf.append("                                                        0 AS DWCB ");
        buf.append("                                                   FROM T_P_BI_CASH_ACC A ");
        buf.append("                                                   JOIN T_P_AB_PORT_RELA R ");
        buf.append("                                                     ON R.C_RELA_TYPE = 'RELA_CASH_ACC' ");
        buf.append("                                                    AND R.N_CHECK_STATE = 1 ");
        buf.append("                                                    AND R.C_RELA_CODE = A.C_CA_CODE ");
        buf.append("                                                   LEFT JOIN TISZHZD D ON A.C_CA_CODE = D.C_S_CODE ");
        buf.append("                                                   JOIN INCZHZD F ON A.C_CA_CODE = F.C_S_CODE ");
        buf.append("                                                  WHERE A.N_CHECK_STATE = 1 ");
        buf.append("      AND  a.C_DV_ACC_NATURE <> 'NA_INT'  ");
        buf.append("                                                    AND R.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                                    AND TRIM(F.C_T_CODE) IS NOT NULL ");
        buf.append("                                                    AND C_DC_CODE NOT IN ");
        buf.append("                                                        (SELECT DISTINCT C_DC_CODE ");
        buf.append("                                                           FROM T_R_FR_ASTSTAT A ");
        buf.append("                                                          WHERE A.C_PORT_CODE = R.C_PORT_CODE ");
        buf.append("                                                            AND D_ASTSTAT = ? ");
        buf.append("                                                            AND (TRIM(C_CA_CODE) IS NOT NULL OR ");
        buf.append("                                                                (C_DAI_CODE IN ");
        buf.append("                                                                ('HBZJ', ");
        buf.append("                                                                   'ZQQSK', ");
        buf.append("                                                                   'ZQQSK_SQK', ");
        buf.append("                                                                   'YSK_SGK', ");
        buf.append("                                                                   'YFK_SHK', ");
        buf.append("                                                                   'YFK_SHF', ");
        buf.append("                                                                   'YSLX_ZJ'))))) ");
        buf.append("                                          ORDER BY ZMDM, ZQID)) ");
        buf.append("                          ORDER BY ZMDM, ZQID) ");
        buf.append("                  ");

        // 3类数据
        buf.append("                 UNION ALL ");
        buf.append("                 SELECT * ");
        buf.append("                   FROM (SELECT 3 AS SX, ");
        buf.append("                                NVL(A.C_PORT_CODE, C.C_PORT_CODE) AS ZMDM, ");
        buf.append("                                NVL(A.C_DC_CODE, C.C_DC_CODE) || '_INC' AS ZQID, ");
        buf.append("                                'L' AS TZFX, ");
        buf.append("                                NVL(N_PORT_MV, 0) + NVL(C.N_SELL_MONEY, 0) AS BWBSZ, ");
        buf.append("                                ? AS RQ, ");
        buf.append("                                0 AS LXYB, ");
        buf.append("                                0 AS LXBW, ");
        buf.append("                                NVL(N_ORIG_MV, 0) + NVL(C.N_ORIG_MONEY, 0) AS SL, ");
        buf.append("                                NVL(A.C_DC_CODE, C.C_DC_CODE) || '_INC' AS TISMA, ");
        buf.append("                                NVL(N_PORT_COST, 0) + NVL(C.N_SELL_MONEY, 0) AS BWBCB, ");
        buf.append("                                (NVL(N_ORIG_MV, 0) + NVL(C.N_ORIG_MONEY, 0)) / ");
        buf.append("                                NVL(NVL(N_PORT_MV, 0) + NVL(C.N_SELL_MONEY, 0), 1) DWCB ");
        buf.append("                           FROM (SELECT A.C_PORT_CODE, ");
        buf.append("                                        A.C_DC_CODE, ");
        buf.append("                                        A.D_ASTSTAT, ");
        buf.append("                                        SUM(N_ORIG_MV) AS N_ORIG_MV, ");
        buf.append("                                        SUM(N_PORT_COST) AS N_PORT_COST, ");
        buf.append("                                        SUM(N_PORT_MV) AS N_PORT_MV ");
        buf.append("                                   FROM T_R_FR_ASTSTAT A ");
        buf.append("               LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE  ");
        buf.append("                                  WHERE C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                        AND ( a.c_dc_code <> 'CNY' AND ZQZM.c_t_code IS NULL )  ");
        buf.append("                                    AND D_ASTSTAT = ? ");
        buf.append("                                    AND C_NAV_TYPE NOT IN ('TOTAL', 'TOTAL_ALL', 'CHECK') ");
        buf.append("                                    AND C_DAI_CODE NOT IN ");
        buf.append("                                        ('ZQTZ_CB', ");
        buf.append("                                         'MRFSJRZC', ");
        buf.append("                                         'MCHGJRZC', ");
        buf.append("                                         'YSGJ_CB', ");
        buf.append("                                         'YSLX_ZQ', ");
        buf.append("                                         'YFLX_ZQ', ");
        buf.append("                                         'YSK_GL', ");
        buf.append("                                         'HBZJ', ");
        buf.append("                                         'YSLX_ZJ', ");
        buf.append("                                         'ZQQSK', ");
        buf.append("                                         'ZQQSK_SQK', ");
        buf.append("                                         'YSK_SGK', ");
        buf.append("                                         'YFK_SHK', ");
        buf.append("                                         'YFK_SHF') ");
        buf.append("                                  GROUP BY C_PORT_CODE, C_DC_CODE, D_ASTSTAT) A ");
        buf.append("                           JOIN T_S_DC_CURY B ");
        buf.append("                             ON A.C_DC_CODE = B.C_DC_CODE ");
        buf.append("                           FULL JOIN (SELECT TA.C_PORT_CODE, ");
        buf.append("                                            TA.C_DC_CODE, ");
        buf.append("                                            SUM(ROUND(TA.N_SELL_MONEY * ");
        buf.append("                                                      NVL(TO_NUMBER(PKG_FUN_F_EXPRESS.F_EXPRESS(PR.C_RATE_EXPR)), ");
        buf.append("                                                          1), ");
        buf.append("                                                      2)) AS N_SELL_MONEY, ");
        buf.append("                                            SUM(TA.N_SELL_MONEY) AS N_ORIG_MONEY ");
        buf.append("                                       FROM T_D_AC_SELL_TA TA ");
        buf.append("                  JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON TA.C_CA_CODE_SETT = ACC.C_CA_CODE  AND ACC.C_DV_ACC_NATURE <> 'NA_INT'  ");
        buf.append("                                       LEFT JOIN T_D_AI_VAL_PR PR ");
        buf.append("                                         ON TA.C_PORT_CODE = PR.C_PORT_CODE ");
        buf.append("                                        AND D_VAL_ACCT = ? ");
        buf.append("                                        AND C_PR_TYPE = 'R' ");
        buf.append("                                        AND NVL(TA.C_DC_CODE, 'CNY') = PR.C_VAL_PR_CODE ");
        buf.append("                                       LEFT JOIN T_P_AB_PORT PORT ON TA.C_PORT_CODE = PORT.C_PORT_CODE ");
        buf.append("                                      WHERE TA.C_PORT_CODE IN (SELECT * FROM TABLE(?)) ");
        buf.append("                                        AND C_DS_CODE = 'TAXS_SG' ");
        buf.append("                                        AND D_CONFIRM < PKG_FUN_GETDAY_HDAY.GETDAY_HDAY(PORT.C_HDAY_CODE, ?, 1, 'W') ");
        buf.append("                                        AND PKG_FUN_GETDAY_HDAY.GETDAY_HDAY(PORT.C_HDAY_CODE, ?, 1, 'W') < D_SETT ");
        buf.append("                                      GROUP BY TA.C_PORT_CODE, TA.C_DC_CODE) C ");
        buf.append("                             ON C.C_PORT_CODE = A.C_PORT_CODE ");
        buf.append("                            AND C.C_DC_CODE = A.C_DC_CODE ");
        buf.append("                          ORDER BY ZMDM, ZQID)) ");
        buf.append("   GROUP BY SX, ZMDM, ZQID, TZFX, RQ, TISMA) T ");
        buf.append("   ORDER BY SX, ZMDM, ZQID ");
        buf.append(" )  ");


        /**
         * STORY #111960 导出的positionfile文件接口对所有境内资产汇总为一条实现证券化 (#2 #1 )
         * 此个union all 单独拆分出来 处理境内的数据
         *  1类：券市场为境内，2，3类 写了两套判断是否为境内数据的逻辑，一。交易账户为境内。二。JNZHZQHZM 字典中有维护值则为境内
         *  最后汇总成一条数据
         */
        buf.append("    		UNION ALL   ");
        buf.append("SELECT                            ");
        buf.append("   T.ZMDM || '|' AS ZMDM,                            ");
        buf.append("   T.ZQID || '|' AS ZQID,                            ");
        buf.append("   T.TZFX || '|' AS TZFX,                            ");
        buf.append("   T.BWBSZ || '|' AS BWBSZ,                            ");
        buf.append("   TO_CHAR ( T.RQ, 'yyyyMMdd' ) || '|' AS RQ,                            ");
        buf.append("   T.LXYB || '|' AS LXYB,                            ");
        buf.append("   T.LXBWB || '|' AS LXBWB,                            ");
        buf.append("   T.SL || '|' AS SL,                            ");
        buf.append("   T.TISMA || '|' AS TISMA,                            ");
        buf.append("   T.BWBCB || '|' AS BWBCB,                            ");
        buf.append("   T.DWCB || '|' AS DWCB,                            ");
        buf.append("   '' || '|' AS UN1,                            ");
        buf.append("   '' || '|' AS UN2,                            ");
        buf.append("   '' || '|' AS UN3,                            ");
        buf.append("   '' || '|' AS UN4,                            ");
        buf.append("   '' || '|' AS UN5,                            ");
        buf.append("   '' || '|' AS UN6,                            ");
        buf.append("   '' || '|' AS UN7                             ");
        buf.append(" FROM                            ");
        buf.append("   (                            ");
        buf.append("   SELECT                            ");
        buf.append("     TO_CHAR ( SUM( BWBSZ ), 'fm9999999999999999999990.00' ) AS BWBSZ,                            ");
        buf.append("     TO_CHAR ( sum(0), 'fm99999999999990.0000000000' ) AS LXYB,                            ");
        buf.append("     TO_CHAR ( sum(0), 'fm9999999999999999999990.00' ) AS LXBWB,                            ");
        buf.append("     TO_CHAR ( SUM( BWBCB ), 'fm9999999999999999999990.00' ) AS BWBCB,                            ");
        buf.append("     TO_CHAR (                            ");
        buf.append("       DECODE(                            ");
        buf.append("         ( SUM( BWBSZ ) / DECODE( SUM( BWBCB ), 0, 1, SUM( BWBCB ) ) ),                            ");
        buf.append("         SUM( BWBSZ ),                            ");
        buf.append("         1,                            ");
        buf.append("         ( SUM( BWBSZ ) / DECODE( SUM( BWBCB ), 0, 1, SUM( BWBCB ) ) )                             ");
        buf.append("       ),                            ");
        buf.append("       'fm999999999990.000000000000'                             ");
        buf.append("     ) AS DWCB,                            ");
        buf.append("     ZMDM,                            ");
        buf.append("     RQ,                            ");
        buf.append("     TO_CHAR ( SUM( BWBCB ), 'fm9999999999999999999990.00' ) AS SL,                            ");
        buf.append("     b.c_t_code AS TISMA,                            ");
        buf.append("     b.c_t_code AS ZQID,                            ");
        buf.append("     'L'  AS TZFX                             ");
        buf.append("   FROM                            ");
        buf.append("     (                            ");
        buf.append("     SELECT                            ");
        buf.append("       *                             ");
        buf.append("     FROM                            ");
        buf.append("       (                            ");
        buf.append("       SELECT                            ");
        buf.append("         *                             ");
        buf.append("       FROM                            ");
        buf.append("         (                            ");
        buf.append("         SELECT                            ");
        buf.append("           *                             ");
        buf.append("         FROM                            ");
        buf.append("           (                            ");
        buf.append("           SELECT                            ");
        buf.append("             *                             ");
        buf.append("           FROM                            ");
        buf.append("             (                            ");
        buf.append("             SELECT                            ");
        buf.append("               3 AS SX,                            ");
        buf.append("               ZQ.ZMDM AS ZMDM,                            ");
        buf.append("               'CNY' AS ZQID,                            ");
        buf.append("               ZQ.TZFX AS TZFX,                            ");
        buf.append("               ZQ.BWBSZ AS BWBSZ,                            ");
        buf.append("               ZQ.RQ AS RQ,                            ");
        buf.append("               ZQ.LXYB AS LXYB,                            ");
        buf.append("               ZQ.LXBWB AS LXBWB,                            ");
        buf.append("               ZQ.SL AS SL,                            ");
        buf.append("               'CNY' AS TISMA,                            ");
        buf.append("               ZQ.BWBCB AS BWBCB,                            ");
        buf.append("               ZQ.DWCB AS DWCB                             ");
        buf.append("             FROM                            ");
        buf.append("               (                            ");
        buf.append("               SELECT                            ");
        buf.append("                 *                             ");
        buf.append("               FROM                            ");
        buf.append("                 (                            ");
        buf.append("                 SELECT                            ");
        buf.append("                   SUM( BWBSZ ) + SUM( LXBWB ) AS BWBSZ,                            ");
        buf.append("                   0 AS LXYB,                            ");
        buf.append("                   0 AS LXBWB,                            ");
        buf.append("                   SUM( BWBCB ) + SUM( LXBWB ) AS BWBCB,                            ");
        buf.append("                   DECODE(                            ");
        buf.append("                     ( SUM( BWBCB ) / DECODE( SUM( SL ), 0, 1, SUM( SL ) ) ),                            ");
        buf.append("                     SUM( BWBCB ),                            ");
        buf.append("                     1,                            ");
        buf.append("                     ( SUM( BWBCB ) / DECODE( SUM( SL ), 0, 1, SUM( SL ) ) )                             ");
        buf.append("                   ) AS DWCB,                            ");
        buf.append("                   ZMDM,                            ");
        buf.append("                   RQ,                            ");
        buf.append("                   SUM( SL ) AS SL,                            ");
        buf.append("                   TISMA,                            ");
        buf.append("                   ZQID,                            ");
        buf.append("                   'L'  AS TZFX                             ");
        buf.append("                 FROM                            ");
        buf.append("                   (                            ");
        buf.append("                   SELECT                            ");
        buf.append("                     A.C_PORT_CODE AS ZMDM,                            ");
        buf.append("                     ' ' AS ZQID,                            ");
        buf.append("                   CASE                            ");
        buf.append("                                                   ");
        buf.append("                       WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                       A.N_PORT_MV ELSE A.N_PORT_MV * N_WAY                             ");
        buf.append("                     END AS BWBSZ,                            ");
        buf.append("                     A.D_ASTSTAT AS RQ,                            ");
        buf.append("                     NVL ( B.N_ORIG_MV, 0 ) AS LXYB,                            ");
        buf.append("                      NVL ( B.N_PORT_MV, 0 ) AS LXBWB,                            ");
        buf.append("                   CASE                            ");
        buf.append("                                                   ");
        buf.append("                       WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                       A.N_PORT_MV ELSE A.N_PORT_MV * N_WAY                             ");
        buf.append("                     END AS SL,                            ");
        buf.append("                     'CNY' AS TISMA,                            ");
        buf.append("                     'L' AS TZFX,                            ");
        buf.append("                   CASE                            ");
        buf.append("                                                   ");
        buf.append("                       WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                       A.N_PORT_COST ELSE A.N_PORT_COST * N_WAY                             ");
        buf.append("                     END AS BWBCB,                            ");
        buf.append("                     0 AS DWCB,                            ");
        buf.append("                     ' ' AS SEC_VAR_CODE,                            ");
        buf.append("                   CASE                            ");
        buf.append("                                                   ");
        buf.append("                       WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                       A.N_PORT_MV ELSE A.N_PORT_MV * N_WAY                             ");
        buf.append("                     END AS AMOUNT                             ");
        buf.append("                   FROM                            ");
        buf.append("                     T_R_FR_ASTSTAT A                            ");
        buf.append("                     LEFT JOIN T_P_SV_SEC_BASE SEC ON A.C_SEC_CODE = SEC.C_SEC_CODE                            ");
        buf.append("                     JOIN T_P_BI_MKT MKT ON SEC.C_MKT_CODE = MKT.C_MKT_CODE                             ");
        buf.append("                     AND MKT.C_AREA_CODE = 'CHN'                            ");
        buf.append("                     LEFT JOIN (                            ");
        buf.append("                     SELECT                            ");
        buf.append("                       *                             ");
        buf.append("                     FROM                            ");
        buf.append("                       T_V_D_GROUP_DETAIL B                            ");
        buf.append("                       JOIN (                            ");
        buf.append("                       SELECT                            ");
        buf.append("                         C_GROUP_CODE_P,                            ");
        buf.append("                         C_GROUP_CODE                             ");
        buf.append("                       FROM                            ");
        buf.append("                         T_V_D_GROUP A START WITH A.C_GROUP_CODE_P = '[root]'                             ");
        buf.append("                         AND A.C_GROUP_CODE = 'XSGZQDMSMM'                             ");
        buf.append("                         AND A.N_CHECK_STATE = 1 CONNECT BY PRIOR A.C_GROUP_CODE = A.C_GROUP_CODE_P                             ");
        buf.append("                       ) C ON B.C_GROUP_CODE = C.C_GROUP_CODE                             ");
        buf.append("                       AND B.N_CHECK_STATE = 1                             ");
        buf.append("                     ) SMZH ON SMZH.C_S_CODE = SEC.C_SEC_CODE                            ");
        buf.append("                     LEFT JOIN (                            ");
        buf.append("                     SELECT                            ");
        buf.append("                       C_PORT_CODE,                            ");
        buf.append("                       C_SEC_CODE,                            ");
        buf.append("                       C_DTA_CODE,                            ");
        buf.append("                       C_DV_ISSUE_MODE,                            ");
        buf.append("                       C_DV_INVEST_CLS,                            ");
        buf.append("                     CASE                            ");
        buf.append("                                                     ");
        buf.append("                         WHEN C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                         N_ORIG_MV ELSE N_ORIG_MV * N_WAY                             ");
        buf.append("                       END AS N_ORIG_MV,                            ");
        buf.append("                     CASE                            ");
        buf.append("                                                     ");
        buf.append("                         WHEN C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                         N_PORT_MV ELSE N_PORT_MV * N_WAY                             ");
        buf.append("                       END AS N_PORT_MV,                            ");
        buf.append("                       C_DAI_CODE                             ");
        buf.append("                     FROM                            ");
        buf.append("                       T_R_FR_ASTSTAT                             ");
        buf.append("                     WHERE                            ");
        buf.append("                       C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                       AND D_ASTSTAT = ?                             ");
        buf.append("                       AND C_DAI_CODE IN ( 'YSLX_ZQ', 'YFLX_ZQ', 'YSK_GL' )                             ");
        buf.append("                       AND TRIM( C_SEC_CODE ) IS NOT NULL                             ");
        buf.append("                     ) B ON A.C_PORT_CODE = B.C_PORT_CODE                             ");
        buf.append("                     AND A.C_SEC_CODE = B.C_SEC_CODE                             ");
        buf.append("                     AND A.C_DTA_CODE = B.C_DTA_CODE                             ");
        buf.append("                     AND A.C_DV_ISSUE_MODE = B.C_DV_ISSUE_MODE                             ");
        buf.append("                     AND A.C_DV_INVEST_CLS = B.C_DV_INVEST_CLS                             ");
        buf.append("                   WHERE                            ");
        buf.append("                     A.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                     AND A.D_ASTSTAT = ?                             ");
        buf.append("                     AND A.C_DAI_CODE IN ( 'ZQTZ_CB', 'MRFSJRZC', 'MCHGJRZC', 'YSGJ_CB' )                             ");
        buf.append("                   AND                            ");
        buf.append("                   CASE                            ");
        buf.append("                                                   ");
        buf.append("                       WHEN ( A.C_DAI_CODE = 'MCHGJRZC' AND B.C_DAI_CODE = 'YSLX_ZQ' )                             ");
        buf.append("                       OR ( A.C_DAI_CODE = 'MRFSJRZC' AND B.C_DAI_CODE = 'YFLX_ZQ' ) THEN                            ");
        buf.append("                         0 ELSE 1                             ");
        buf.append("                       END = 1                             ");
        buf.append("                     )                             ");
        buf.append("                   GROUP BY                            ");
        buf.append("                     ZMDM,                            ");
        buf.append("                     ZQID,                            ");
        buf.append("                     RQ,                            ");
        buf.append("                     TISMA,                            ");
        buf.append("                     TZFX,                            ");
        buf.append("                     SEC_VAR_CODE UNION ALL                            ");
        buf.append("                   SELECT                            ");
        buf.append("                     SUM( BWBSZ )+ SUM( LXBWB ) AS BWBSZ,                            ");
        buf.append("                     SUM( LXYB ) AS LXYB,                            ");
        buf.append("                     SUM( LXBWB ) AS LXBWB,                            ");
        buf.append("                     SUM( BWBCB ) + SUM( LXBWB ) AS BWBCB,                            ");
        buf.append("                     DECODE(                            ");
        buf.append("                       ( SUM( BWBCB ) / DECODE( SUM( AMOUNT ), 0, 1, SUM( AMOUNT ) ) ),                            ");
        buf.append("                       SUM( BWBCB ),                            ");
        buf.append("                       1,                            ");
        buf.append("                       ( SUM( BWBCB ) / DECODE( SUM( AMOUNT ), 0, 1, SUM( AMOUNT ) ) )                             ");
        buf.append("                     ) AS DWCB,                            ");
        buf.append("                     ZMDM,                            ");
        buf.append("                     RQ,                            ");
        buf.append("                     SUM( SL ) AS SL,                            ");
        buf.append("                     'CNY' AS TISMA,                            ");
        buf.append("                     ' ' AS ZQID,                            ");
        buf.append("                    'L' AS TZFX                             ");
        buf.append("                   FROM                            ");
        buf.append("                     (                            ");
        buf.append("                     SELECT                            ");
        buf.append("                       A.C_PORT_CODE AS ZMDM,                            ");
        buf.append("                       NVL ( SEC.C_SM_CODE, A.C_SEC_CODE ) AS ZQID,                            ");
        buf.append("                     CASE                            ");
        buf.append("                                                     ");
        buf.append("                         WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                         0 ELSE 0                             ");
        buf.append("                       END AS BWBSZ,                            ");
        buf.append("                       A.D_ASTSTAT AS RQ,                            ");
        buf.append("                       NVL ( A.N_ORIG_MV, 0 ) AS LXYB,                            ");
        buf.append("                       NVL ( A.N_PORT_MV, 0 ) AS LXBWB,                            ");
        buf.append("                     CASE                            ");
        buf.append("                                                     ");
        buf.append("                         WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                         A.N_PORT_COST                             ");
        buf.append("                         WHEN SEC.C_SEC_VAR_CODE LIKE 'ZQ%' THEN                            ");
        buf.append("                         A.N_AMOUNT * SEC.N_FV_ISSUE ELSE A.N_AMOUNT                             ");
        buf.append("                       END AS SL,                            ");
        buf.append("                    'L'  AS TZFX,                            ");
        buf.append("                           NVL ( SEC.C_SM_CODE, A.C_SEC_CODE ) AS TISMA,                            ");
        buf.append("                         CASE                            ");
        buf.append("                                                         ");
        buf.append("                             WHEN SEC.C_SEC_VAR_CODE LIKE 'HG%' THEN                            ");
        buf.append("                             0 ELSE 0                             ");
        buf.append("                           END AS BWBCB,                            ");
        buf.append("                           1 AS DWCB,                            ");
        buf.append("                           SEC.C_SEC_VAR_CODE AS SEC_VAR_CODE,                            ");
        buf.append("                           DECODE( A.N_AMOUNT, 0, 0, A.N_AMOUNT ) AS AMOUNT                             ");
        buf.append("                         FROM                            ");
        buf.append("                           T_R_FR_ASTSTAT A                            ");
        buf.append("                           LEFT JOIN T_P_SV_SEC_BASE SEC ON A.C_SEC_CODE = SEC.C_SEC_CODE                            ");
        buf.append("                           JOIN T_P_BI_MKT MKT ON SEC.C_MKT_CODE = MKT.C_MKT_CODE                             ");
        buf.append("                           AND MKT.C_AREA_CODE = 'CHN'                            ");
        buf.append("                           LEFT JOIN (                            ");
        buf.append("                           SELECT                            ");
        buf.append("                             *                             ");
        buf.append("                           FROM                            ");
        buf.append("                             T_V_D_GROUP_DETAIL B                            ");
        buf.append("                             JOIN (                            ");
        buf.append("                             SELECT                            ");
        buf.append("                               C_GROUP_CODE_P,                            ");
        buf.append("                               C_GROUP_CODE                             ");
        buf.append("                             FROM                            ");
        buf.append("                               T_V_D_GROUP A START WITH A.C_GROUP_CODE_P = '[root]'                             ");
        buf.append("                               AND A.C_GROUP_CODE = 'XSGZQDMSMM'                             ");
        buf.append("                               AND A.N_CHECK_STATE = 1 CONNECT BY PRIOR A.C_GROUP_CODE = A.C_GROUP_CODE_P                             ");
        buf.append("                             ) C ON B.C_GROUP_CODE = C.C_GROUP_CODE                             ");
        buf.append("                             AND B.N_CHECK_STATE = 1                             ");
        buf.append("                           ) SMZH ON SMZH.C_S_CODE = SEC.C_SEC_CODE                             ");
        buf.append("                         WHERE                            ");
        buf.append("                           A.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                           AND A.D_ASTSTAT = ?                             ");
        buf.append("                           AND A.C_DAI_CODE IN ( 'YSLX_ZQ', 'YFLX_ZQ', 'YSK_GL' )                             ");
        buf.append("                           AND NOT EXISTS (                            ");
        buf.append("                           SELECT                            ");
        buf.append("                             1                             ");
        buf.append("                           FROM                            ");
        buf.append("                             T_R_FR_ASTSTAT B                             ");
        buf.append("                           WHERE                            ");
        buf.append("                             A.C_PORT_CODE = B.C_PORT_CODE                             ");
        buf.append("                             AND A.C_SEC_CODE = B.C_SEC_CODE                             ");
        buf.append("                             AND A.C_DTA_CODE = B.C_DTA_CODE                             ");
        buf.append("                             AND A.C_DV_ISSUE_MODE = B.C_DV_ISSUE_MODE                             ");
        buf.append("                             AND A.C_DV_INVEST_CLS = B.C_DV_INVEST_CLS                             ");
        buf.append("                             AND A.D_ASTSTAT = B.D_ASTSTAT                             ");
        buf.append("                             AND B.C_DAI_CODE IN ( 'ZQTZ_CB', 'MRFSJRZC', 'MCHGJRZC', 'YSGJ_CB' )                             ");
        buf.append("                           )                             ");
        buf.append("                         )                             ");
        buf.append("                       GROUP BY                            ");
        buf.append("                         ZMDM,                            ");
        buf.append("                         ZQID,                            ");
        buf.append("                         RQ,                            ");
        buf.append("                         TISMA,                            ");
        buf.append("                         TZFX,                            ");
        buf.append("                         SEC_VAR_CODE                             ");
        buf.append("                       ORDER BY                            ");
        buf.append("                         ZMDM,                            ");
        buf.append("                         ZQID                             ");
        buf.append("                       )                             ");
        buf.append("                     ) ZQ                             ");
        buf.append("                   )                             ");
        buf.append("                 ORDER BY                            ");
        buf.append("                   ZMDM,                            ");
        buf.append("                   ZQID,                            ");
        buf.append("                   TZFX                             ");
        buf.append("                 )                             ");
        buf.append("               ) UNION ALL                            ");
        buf.append("             SELECT                            ");
        buf.append("               SX,                            ");
        buf.append("               ZMDM,                            ");
        buf.append("               ZQID,                            ");
        buf.append("               TZFX,                            ");
        buf.append("               SUM( BWBSZ ) + SUM( LXBWB ) AS BWBSZ,                            ");
        buf.append("               RQ,                            ");
        buf.append("               0 AS LXYB,                            ");
        buf.append("               0 AS LXBWB,                            ");
        buf.append("               SUM( BWBCB ) + SUM( LXBWB ) AS SL,                            ");
        buf.append("               TISMA,                            ");
        buf.append("               SUM( BWBCB ) + SUM( LXBWB ) AS BWBCB,                            ");
        buf.append("               1 DWCB                             ");
        buf.append("             FROM                            ");
        buf.append("               (                            ");
        buf.append("               SELECT                            ");
        buf.append("                 *                             ");
        buf.append("               FROM                            ");
        buf.append("                 (                            ");
        buf.append("                 SELECT                            ");
        buf.append("                   *                             ");
        buf.append("                 FROM                            ");
        buf.append("                   (                            ");
        buf.append("                   SELECT                            ");
        buf.append("                     *                             ");
        buf.append("                   FROM                            ");
        buf.append("                     (                            ");
        buf.append("                     SELECT                            ");
        buf.append("                       3 AS SX,                            ");
        buf.append("                       C_PORT_CODE AS ZMDM,                            ");
        buf.append("                       C_DC_CODE AS ZQID,                            ");
        buf.append("                       'L' AS TZFX,                            ");
        buf.append("                       N_PORT_MV AS BWBSZ,                            ");
        buf.append("                       D_ASTSTAT AS RQ,                            ");
        buf.append("                       N_ORIG_MV_LX AS LXYB,                            ");
        buf.append("                       N_PORT_MV_LX AS LXBWB,                            ");
        buf.append("                       N_ORIG_MV AS SL,                            ");
        buf.append("                       C_DC_CODE AS TISMA,                            ");
        buf.append("                       N_PORT_COST AS BWBCB,                            ");
        buf.append("                       1 AS DWCB                             ");
        buf.append("                     FROM                            ");
        buf.append("                       (                            ");
        buf.append("                       SELECT                            ");
        buf.append("                         NVL ( A.C_PORT_CODE, NVL ( B.C_PORT_CODE, C.C_PORT_CODE ) ) C_PORT_CODE,                            ");
        buf.append("                         NVL ( A.C_DC_CODE, NVL ( B.C_DC_CODE, C.C_DC_CODE ) ) C_DC_CODE,                            ");
        buf.append("                         NVL ( A.D_ASTSTAT, NVL ( B.D_ASTSTAT, C.D_ASTSTAT ) ) D_ASTSTAT,                            ");
        buf.append("                         NVL ( B.N_PORT_MV + NVL ( D.N_SELL_MONEY, 0 ), 0 ) AS N_PORT_MV,                            ");
        buf.append("                         NVL ( B.N_ORIG_MV + NVL ( D.N_ORIG_MONEY, 0 ), 0 ) AS N_ORIG_MV,                            ");
        buf.append("                         NVL ( B.N_PORT_COST + NVL ( D.N_SELL_MONEY, 0 ), 0 ) AS N_PORT_COST,                            ");
        buf.append("                         NVL ( C.N_ORIG_MV, 0 ) AS N_ORIG_MV_LX,                            ");
        buf.append("                         NVL ( C.N_PORT_MV, 0 ) AS N_PORT_MV_LX                             ");
        buf.append("                       FROM                            ");
        buf.append("                         (                            ");
        buf.append("                         SELECT DISTINCT                            ");
        buf.append("                           C_PORT_CODE,                            ");
        buf.append("                           'CNY' AS C_DC_CODE,                            ");
        buf.append("                           D_ASTSTAT                             ");
        buf.append("                         FROM                            ");
        buf.append("                           T_R_FR_ASTSTAT A                            ");
        buf.append("                           LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE                             ");
        buf.append("                           LEFT JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON A.C_CA_CODE = ACC.C_CA_CODE                            ");
        buf.append("                         WHERE                            ");
        buf.append("                           C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                           AND D_ASTSTAT = ?                             ");
        buf.append("                           AND C_DAI_CODE = 'HBZJ'                             ");
        buf.append("                           AND C_NAV_TYPE = 'CACH'                             ");
        buf.append("                           AND (                            ");
        buf.append("                             ( a.C_DV_ACC_TYPE NOT LIKE '%EX_RES%' AND a.C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%' AND TRIM( a.C_CA_CODE ) IS NOT NULL  AND ( a.c_dc_code = 'CNY' OR ZQZM.c_t_code IS NOT NULL ) )                             ");
        buf.append("                             OR ( ( a.C_DV_ACC_TYPE LIKE '%EX_RES%' OR a.C_DV_ACC_TYPE LIKE '%ACC_TD_BAIL%'   AND ACC.C_DV_ACC_NATURE = 'NA_INT' ) )                             ");
        buf.append("                           )                             ");
        buf.append("                         ) A                            ");
        buf.append("                         FULL JOIN (                            ");
        buf.append("                         SELECT                            ");
        buf.append("                           SUM(                            ");
        buf.append("                             0 + ( CASE WHEN C_DAI_CODE IN ( 'HBZJ', 'ZQQSK', 'ZQQSK_SQK' ) THEN N_PORT_MV * N_WAY ELSE N_PORT_MV * N_WAY * - 1 END )                             ");
        buf.append("                           ) AS N_PORT_MV,                            ");
        buf.append("                           SUM(                            ");
        buf.append("                             0 + ( CASE WHEN C_DAI_CODE IN ( 'HBZJ', 'ZQQSK', 'ZQQSK_SQK' ) THEN N_ORIG_MV * N_WAY ELSE N_ORIG_MV * N_WAY * - 1 END )                             ");
        buf.append("                           ) AS N_ORIG_MV,                            ");
        buf.append("                           SUM(                            ");
        buf.append("                             0 + ( CASE WHEN C_DAI_CODE IN ( 'HBZJ', 'ZQQSK', 'ZQQSK_SQK' ) THEN N_PORT_COST * N_WAY ELSE N_PORT_COST * N_WAY * - 1 END )                             ");
        buf.append("                           ) AS N_PORT_COST,                            ");
        buf.append("                           C_PORT_CODE,                            ");
        buf.append("                           C_DC_CODE,                            ");
        buf.append("                           D_ASTSTAT                             ");
        buf.append("                         FROM                            ");
        buf.append("                           (                            ");
        buf.append("                           SELECT                            ");
        buf.append("                             A.C_PORT_CODE,                            ");
        buf.append("                             A.D_ASTSTAT,                            ");
        buf.append("                             A.N_WAY,                            ");
        buf.append("                             A.C_DAI_CODE,                            ");
        buf.append("                                                         ");
        buf.append("                             A.N_PORT_MV  AS N_PORT_MV,                            ");
        buf.append("                             A.N_ORIG_MV   AS N_ORIG_MV,                            ");
        buf.append("                             A.N_PORT_COST   AS N_PORT_COST,                            ");
        buf.append("                             A.N_PORT_MV AS N_PORT_MV1,                            ");
        buf.append("                             A.C_CA_CODE,                            ");
        buf.append("                             'CNY' AS C_DC_CODE                             ");
        buf.append("                           FROM                            ");
        buf.append("                             T_R_FR_ASTSTAT A                            ");
        buf.append("                             LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE                              ");
        buf.append("                             LEFT JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON A.C_CA_CODE = ACC.C_CA_CODE                              ");
        buf.append("                           WHERE                            ");
        buf.append("                             a.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                             AND D_ASTSTAT = ?                             ");
        buf.append("                             AND C_DAI_CODE IN ( 'HBZJ', 'ZQQSK', 'ZQQSK_SQK', 'YFK_SHK', 'YFK_SHF' )                             ");
        buf.append("                                                        ");
        buf.append("                              AND (                            ");
        buf.append("                             ( a.C_DV_ACC_TYPE NOT LIKE '%EX_RES%' AND a.C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%'  AND ( a.c_dc_code = 'CNY' OR ZQZM.c_t_code IS NOT NULL ) )                             ");
        buf.append("                             OR ( a.C_DV_ACC_TYPE LIKE '%EX_RES%' OR a.C_DV_ACC_TYPE LIKE '%ACC_TD_BAIL%' AND ACC.C_DV_ACC_NATURE = 'NA_INT')                             ");
        buf.append("                           )                            ");
        buf.append("                           )                             ");
        buf.append("                         GROUP BY                            ");
        buf.append("                           C_PORT_CODE,                            ");
        buf.append("                           C_DC_CODE,                            ");
        buf.append("                           D_ASTSTAT                             ");
        buf.append("                         ) B ON A.C_PORT_CODE = B.C_PORT_CODE                             ");
        buf.append("                         AND A.C_DC_CODE = B.C_DC_CODE                            ");
        buf.append("                         FULL JOIN (                            ");
        buf.append("                         SELECT                            ");
        buf.append("                           A.C_PORT_CODE,                            ");
        buf.append("                           A.C_DC_CODE,                            ");
        buf.append("                           A.D_ASTSTAT,                            ");
        buf.append("                           SUM( N_ORIG_MV * N_WAY ) AS N_ORIG_MV,                            ");
        buf.append("                           SUM( N_PORT_MV * N_WAY ) AS N_PORT_MV                             ");
        buf.append("                         FROM                            ");
        buf.append("                           (                            ");
        buf.append("                           SELECT                            ");
        buf.append("                             A.C_PORT_CODE,                            ");
        buf.append("                             A.D_ASTSTAT,                            ");
        buf.append("                             A.N_WAY,                            ");
        buf.append("                             A.C_DAI_CODE,                            ");
        buf.append("                             A.N_PORT_MV,                            ");
        buf.append("                             A.N_ORIG_MV,                            ");
        buf.append("                             A.N_PORT_COST,                            ");
        buf.append("                             'CNY' AS C_DC_CODE                             ");
        buf.append("                           FROM                            ");
        buf.append("                             T_R_FR_ASTSTAT A                            ");
        buf.append("                             LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE                             ");
        buf.append("                             LEFT JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON A.C_CA_CODE = ACC.C_CA_CODE                          ");
        buf.append("                           WHERE                            ");
        buf.append("                             A.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                  AND (  ( a.C_DV_ACC_TYPE NOT LIKE '%EX_RES%' AND a.C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%'  AND ( a.c_dc_code = 'CNY' OR ZQZM.c_t_code IS NOT NULL) )        ");
        buf.append("                         OR ( a.C_DV_ACC_TYPE LIKE '%EX_RES%' OR a.C_DV_ACC_TYPE LIKE '%ACC_TD_BAIL%' AND ACC.C_DV_ACC_NATURE = 'NA_INT')  )       ");
        buf.append("                             AND A.D_ASTSTAT = ?                             ");
        buf.append("                             AND A.C_DAI_CODE = 'YSLX_ZJ'                             ");
        buf.append("                           ) A                             ");
        buf.append("                         GROUP BY                            ");
        buf.append("                           C_PORT_CODE,                            ");
        buf.append("                           C_DC_CODE,                            ");
        buf.append("                           D_ASTSTAT                             ");
        buf.append("                         ) C ON A.C_PORT_CODE = C.C_PORT_CODE                             ");
        buf.append("                         AND A.C_DC_CODE = C.C_DC_CODE                            ");
        buf.append("                         FULL JOIN (                            ");
        buf.append("                         SELECT                            ");
        buf.append("                           TA.C_PORT_CODE,                            ");
        buf.append("                           'CNY' AS C_DC_CODE,                            ");
        buf.append("                           SUM( ROUND( TA.N_SELL_MONEY * NVL ( TO_NUMBER ( PKG_FUN_F_EXPRESS.F_EXPRESS ( TA.C_RATE_EXPR ) ), 1 ), 2 ) ) AS N_SELL_MONEY,                            ");
        buf.append("                           SUM( TA.N_SELL_MONEY ) AS N_ORIG_MONEY                             ");
        buf.append("                         FROM                            ");
        buf.append("                           (                            ");
        buf.append("                           SELECT                            ");
        buf.append("                             TA.C_PORT_CODE,                            ");
        buf.append("                             TA.N_SELL_MONEY,                            ");
        buf.append("                             PR.C_RATE_EXPR,                            ");
        buf.append("                             TA.C_DC_CODE AS C_DC_CODE                             ");
        buf.append("                           FROM                            ");
        buf.append("                             T_D_AC_SELL_TA TA                            ");
        buf.append("                             JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON TA.C_CA_CODE_SETT = ACC.C_CA_CODE  AND ACC.C_DV_ACC_NATURE = 'NA_INT'                             ");
        buf.append("                             LEFT JOIN T_D_AI_VAL_PR PR ON TA.C_PORT_CODE = PR.C_PORT_CODE                                ");

        buf.append("                             AND D_VAL_ACCT = ?                             ");
        buf.append("                             AND C_PR_TYPE = 'R'                             ");
        buf.append("                             AND NVL ( TA.C_DC_CODE, 'CNY' ) = PR.C_VAL_PR_CODE                            ");
        buf.append("                             LEFT JOIN T_P_AB_PORT PORT ON TA.C_PORT_CODE = PORT.C_PORT_CODE                            ");
        buf.append("                             LEFT JOIN JNZHZQHZM ZQZM ON TA.C_CA_CODE_SETT = ZQZM.C_S_CODE                             ");
        buf.append("                           WHERE                            ");
        buf.append("                             TA.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                             AND ( ta.c_dc_code = 'CNY' OR ZQZM.c_t_code IS NOT NULL )                             ");
        buf.append("                             AND C_DS_CODE = 'TAXS_SG'                             ");
        buf.append("                             AND D_SETT = PKG_FUN_GETDAY_HDAY.GETDAY_HDAY ( PORT.C_HDAY_CODE, ?, 1, 'W' )                             ");
        buf.append("                             AND D_CONFIRM != D_SETT                             ");
        buf.append("                           ) TA                             ");
        buf.append("                         GROUP BY                            ");
        buf.append("                           TA.C_PORT_CODE                          ");
        buf.append("                         ) D ON A.C_PORT_CODE = D.C_PORT_CODE                             ");
        buf.append("                         AND A.C_DC_CODE = D.C_DC_CODE                             ");
        buf.append("                       )                             ");
        buf.append("                     ORDER BY                            ");
        buf.append("                       C_PORT_CODE,                            ");
        buf.append("                       ZQID                             ");
        buf.append("                     ) UNION ALL                            ");
        buf.append("                   SELECT                            ");
        buf.append("                     *                             ");
        buf.append("                   FROM                            ");
        buf.append("                     (                            ");
        buf.append("                     SELECT DISTINCT                            ");
        buf.append("                       3 AS SX,                            ");
        buf.append("                       ZMDM,                            ");
        buf.append("                       ZQID,                            ");
        buf.append("                       TZFX,                            ");
        buf.append("                       BWBSZ,                            ");
        buf.append("                       RQ,                            ");
        buf.append("                       LXYB,                            ");
        buf.append("                       LXBWB,                            ");
        buf.append("                       SL,                            ");
        buf.append("                       TISMA,                            ");
        buf.append("                       BWBCB,                            ");
        buf.append("                       DWCB                             ");
        buf.append("                     FROM                            ");
        buf.append("                       (                            ");
        buf.append("                       SELECT                            ");
        buf.append("                         R.C_PORT_CODE AS ZMDM,                            ");
        buf.append("                         'CNY' AS ZQID,                            ");
        buf.append("                         'L' AS TZFX,                            ");
        buf.append("                         0 AS BWBSZ,                            ");
        buf.append("                         ? AS RQ,                            ");
        buf.append("                         0 AS LXYB,                            ");
        buf.append("                         0 AS LXBWB,                            ");
        buf.append("                         0 AS SL,                            ");
        buf.append("                         'CNY' AS TISMA,                            ");
        buf.append("                         0 AS BWBCB,                            ");
        buf.append("                         0 AS DWCB                             ");
        buf.append("                       FROM                            ");
        buf.append("                         T_P_BI_CASH_ACC A                            ");
        buf.append("                         JOIN T_P_AB_PORT_RELA R ON R.C_RELA_TYPE = 'RELA_CASH_ACC'                             ");
        buf.append("                         AND R.N_CHECK_STATE = 1                             ");
        buf.append("                         AND R.C_RELA_CODE = A.C_CA_CODE                            ");
        buf.append("                                                     ");
        buf.append("                       WHERE                            ");
        buf.append("                         A.N_CHECK_STATE = 1                             ");
        buf.append("                         AND   a.C_DV_ACC_NATURE = 'NA_INT'                            ");
        buf.append("                         AND R.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                         AND C_DC_CODE NOT IN (                            ");
        buf.append("                         SELECT DISTINCT                            ");
        buf.append("                           C_DC_CODE                             ");
        buf.append("                         FROM                            ");
        buf.append("                           T_R_FR_ASTSTAT A                             ");
        buf.append("                         WHERE                            ");
        buf.append("                           A.C_PORT_CODE = R.C_PORT_CODE                             ");
        buf.append("                           AND D_ASTSTAT = ?                             ");
        buf.append("                           AND (                            ");
        buf.append("                             TRIM( C_CA_CODE ) IS NOT NULL                             ");
        buf.append("                             OR ( C_DAI_CODE IN ( 'HBZJ', 'ZQQSK', 'ZQQSK_SQK', 'YSK_SGK', 'YFK_SHK', 'YFK_SHF', 'YSLX_ZJ' ) )                             ");
        buf.append("                           )                             ");
        buf.append("                         )                             ");
        buf.append("                       )                             ");
        buf.append("                     ORDER BY                            ");
        buf.append("                       ZMDM,                            ");
        buf.append("                       ZQID                             ");
        buf.append("                     )                             ");
        buf.append("                   )                             ");
        buf.append("                 ORDER BY                            ");
        buf.append("                   ZMDM,                            ");
        buf.append("                   ZQID                             ");
        buf.append("                 ) UNION ALL                            ");
        buf.append("               SELECT                            ");
        buf.append("                 *                             ");
        buf.append("               FROM                            ");
        buf.append("                 (                            ");
        buf.append("                 SELECT                            ");
        buf.append("                   3 AS SX,                            ");
        buf.append("                   NVL ( A.C_PORT_CODE, C.C_PORT_CODE ) AS ZMDM,                            ");
        buf.append("                   'CNY' AS ZQID,                            ");
        buf.append("                   'L' AS TZFX,                            ");
        buf.append("                   NVL ( N_PORT_MV, 0 ) + NVL ( C.N_SELL_MONEY, 0 ) AS BWBSZ,                            ");
        buf.append("                   ? AS RQ,                            ");
        buf.append("                   0 AS LXYB,                            ");
        buf.append("                   0 AS LXBW,                            ");
        buf.append("                   NVL ( N_ORIG_MV, 0 ) + NVL ( C.N_ORIG_MONEY, 0 ) AS SL,                            ");
        buf.append("                   'CNY' AS TISMA,                            ");
        buf.append("                   NVL ( N_PORT_COST, 0 ) + NVL ( C.N_SELL_MONEY, 0 ) AS BWBCB,                            ");
        buf.append("                   ( NVL ( N_ORIG_MV, 0 ) + NVL ( C.N_ORIG_MONEY, 0 ) ) / NVL ( NVL ( N_PORT_MV, 0 ) + NVL ( C.N_SELL_MONEY, 0 ), 1 ) DWCB                             ");
        buf.append("                 FROM                            ");
        buf.append("                   (                            ");
        buf.append("                   SELECT                            ");
        buf.append("                     A.C_PORT_CODE,                            ");
        buf.append("                    'CNY' AS C_DC_CODE,                            ");
        buf.append("                     A.D_ASTSTAT,                            ");
        buf.append("                     SUM( N_ORIG_MV  ) AS N_ORIG_MV,                            ");
        buf.append("                     SUM( N_PORT_COST  ) AS N_PORT_COST,                            ");
        buf.append("                     SUM( N_PORT_MV ) AS N_PORT_MV                             ");
        buf.append("                   FROM                            ");
        buf.append("                     T_R_FR_ASTSTAT A                            ");
        buf.append("                     LEFT JOIN JNZHZQHZM ZQZM ON A.C_CA_CODE = ZQZM.C_S_CODE                            ");
        buf.append("                      LEFT  JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON A.C_CA_CODE = ACC.C_CA_CODE                            ");
        buf.append("                   WHERE                            ");
        buf.append("                     a.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                                              ");
        buf.append("                     AND D_ASTSTAT = ?                             ");
        buf.append("                     AND C_NAV_TYPE NOT IN ( 'TOTAL', 'TOTAL_ALL', 'CHECK' )                             ");
        buf.append("                     AND C_DAI_CODE NOT IN (                            ");
        buf.append("                       'ZQTZ_CB',                            ");
        buf.append("                       'MRFSJRZC',                            ");
        buf.append("                       'MCHGJRZC',                            ");
        buf.append("                       'YSGJ_CB',                            ");
        buf.append("                       'YSLX_ZQ',                            ");
        buf.append("                       'YFLX_ZQ',                            ");
        buf.append("                       'YSK_GL',                            ");
        buf.append("                       'HBZJ',                            ");
        buf.append("                       'YSLX_ZJ',                            ");
        buf.append("                       'ZQQSK',                            ");
        buf.append("                       'ZQQSK_SQK',                            ");
        buf.append("                       'YSK_SGK',                            ");
        buf.append("                       'YFK_SHK',                            ");
        buf.append("                       'YFK_SHF'                             ");
        buf.append("                     )                             ");
        buf.append("                     AND (  ( a.C_DV_ACC_TYPE NOT LIKE '%EX_RES%' AND a.C_DV_ACC_TYPE NOT LIKE '%ACC_TD_BAIL%'                               ");
        buf.append("                     AND ( a.c_dc_code = 'CNY' OR ZQZM.c_t_code IS NOT NULL )  )    OR  ( a.C_DV_ACC_TYPE LIKE '%EX_RES%' OR a.C_DV_ACC_TYPE LIKE '%ACC_TD_BAIL%'   AND   acc.C_DV_ACC_NATURE = 'NA_INT'  )  )                             ");
        buf.append("                   GROUP BY                            ");
        buf.append("                     a.C_PORT_CODE,                            ");
        buf.append("                     C_DC_CODE,                            ");
        buf.append("                     D_ASTSTAT                             ");
        buf.append("                   ) A                            ");
        buf.append("                   JOIN T_S_DC_CURY B ON A.C_DC_CODE = B.C_DC_CODE                            ");
        buf.append("                   FULL JOIN (                            ");
        buf.append("                   SELECT                            ");
        buf.append("                     TA.C_PORT_CODE,                            ");
        buf.append("                     'CNY' AS C_DC_CODE,                            ");
        buf.append("                     SUM( ROUND( TA.N_SELL_MONEY * NVL ( TO_NUMBER ( PKG_FUN_F_EXPRESS.F_EXPRESS ( PR.C_RATE_EXPR ) ), 1 ), 2 ) ) AS N_SELL_MONEY,                            ");
        buf.append("                     SUM( TA.N_SELL_MONEY ) AS N_ORIG_MONEY                             ");
        buf.append("                   FROM                            ");
        buf.append("                     T_D_AC_SELL_TA TA                            ");
        buf.append("                     JOIN (SELECT c_ca_code,C_DV_ACC_NATURE FROM T_P_BI_CASH_ACC) ACC ON TA.C_CA_CODE_SETT = ACC.C_CA_CODE  AND ACC.C_DV_ACC_NATURE = 'NA_INT'                             ");
        buf.append("                     LEFT JOIN T_D_AI_VAL_PR PR ON TA.C_PORT_CODE = PR.C_PORT_CODE                             ");
        buf.append("                     AND D_VAL_ACCT = ?                             ");
        buf.append("                     AND C_PR_TYPE = 'R'                             ");
        buf.append("                     AND NVL ( TA.C_DC_CODE, 'CNY' ) = PR.C_VAL_PR_CODE                            ");
        buf.append("                     LEFT JOIN T_P_AB_PORT PORT ON TA.C_PORT_CODE = PORT.C_PORT_CODE                             ");
        buf.append("                   WHERE                            ");
        buf.append("                     TA.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                     AND C_DS_CODE = 'TAXS_SG'                             ");
        buf.append("                     AND D_CONFIRM < PKG_FUN_GETDAY_HDAY.GETDAY_HDAY ( PORT.C_HDAY_CODE, ?, 1, 'W' )                             ");
        buf.append("                     AND PKG_FUN_GETDAY_HDAY.GETDAY_HDAY ( PORT.C_HDAY_CODE, ?, 1, 'W' ) < D_SETT                             ");
        buf.append("                   GROUP BY                            ");
        buf.append("                     TA.C_PORT_CODE                        ");
        buf.append("                   ) C ON C.C_PORT_CODE = A.C_PORT_CODE                             ");
        buf.append("                   AND C.C_DC_CODE = A.C_DC_CODE                             ");
        buf.append("                 ORDER BY                            ");
        buf.append("                   ZMDM,                            ");
        buf.append("                   ZQID                             ");
        buf.append("                 ) UNION ALL                            ");
        buf.append("               SELECT                            ");
        buf.append("                 3 AS SX,                            ");
        buf.append("                 CASH.C_PORT_CODE AS ZMDM,                            ");
        buf.append("                 'CNY' AS ZQID,                            ");
        buf.append("                 'L' AS TZFX,                            ");
        buf.append("                 SUM( ROUND( CASH.N_TD_MONEY_I * NVL ( TO_NUMBER ( PKG_FUN_F_EXPRESS.F_EXPRESS ( PR.C_RATE_EXPR ) ), 1 ), 2 ) ) AS BWBSZ,                            ");
        buf.append("                 ? AS RQ,                            ");
        buf.append("                 0 AS LXYB,                            ");
        buf.append("                 0 AS LXBW,                            ");
        buf.append("                 0 AS SL,                            ");
        buf.append("                 'CNY' AS TISMA,                            ");
        buf.append("                 SUM( ROUND( CASH.N_TD_MONEY_I * NVL ( TO_NUMBER ( PKG_FUN_F_EXPRESS.F_EXPRESS ( PR.C_RATE_EXPR ) ), 1 ), 2 ) ) AS BWBCB,                            ");
        buf.append("                 0 AS DWCB                             ");
        buf.append("               FROM                            ");
        buf.append("                 T_D_AC_CASH CASH                            ");
        buf.append("                 LEFT JOIN T_D_AI_VAL_PR PR ON CASH.C_PORT_CODE = PR.C_PORT_CODE                             ");
        buf.append("                 AND D_VAL_ACCT = ?                             ");
        buf.append("                 AND C_PR_TYPE = 'R'                             ");
        buf.append("                 AND CASH.C_DC_CODE_i = PR.C_VAL_PR_CODE                             ");
        buf.append("                 AND CASH.C_DC_CODE <> 'CNY'                            ");
        buf.append("                 AND CASH.C_DC_CODE_i <> 'CNY'                            ");
        buf.append("                 LEFT JOIN T_P_AB_PORT PORT ON CASH.C_PORT_CODE = PORT.C_PORT_CODE                             ");
        buf.append("               WHERE                             ");
        buf.append("                 CASH.C_PORT_CODE IN ( SELECT * FROM TABLE(?) )                             ");
        buf.append("                 AND CASH.C_DV_TYPE_SUB = 'ZJHH_HB'                             ");
        buf.append("                 AND CASH.C_DC_CODE <> 'CNY'                             ");
        buf.append("                 AND D_SETT_FACT_I > ?                             ");
        buf.append("                 AND EXISTS ( SELECT 1 FROM T_P_BI_CASH_ACC ACC WHERE CASH.C_CA_CODE_SETT_DUE = ACC.C_CA_CODE AND ACC.C_DV_ACC_NATURE <> 'NA_INT' )                             ");
        buf.append("                 AND EXISTS ( SELECT 1 FROM T_P_BI_CASH_ACC ACC WHERE CASH.C_CA_CODE_SETT_DUE_I = ACC.C_CA_CODE AND ACC.C_DV_ACC_NATURE = 'NA_INT' )                            ");
        buf.append("               GROUP BY                            ");
        buf.append("                 CASH.C_PORT_CODE                            ");
        buf.append("               )                             ");
        buf.append("             GROUP BY                            ");
        buf.append("               SX,                            ");
        buf.append("               ZMDM,                            ");
        buf.append("               ZQID,                            ");
        buf.append("               TZFX,                            ");
        buf.append("               RQ,                            ");
        buf.append("               TISMA                             ");
        buf.append("             ) T                             ");
        buf.append("           ORDER BY                            ");
        buf.append("             SX,                            ");
        buf.append("             ZMDM,                            ");
        buf.append("             ZQID                             ");
        buf.append("           ) T,                            ");
        buf.append("           CACODE_JNZH b                             ");
        buf.append("         WHERE                            ");
        buf.append("           b.ASTDATE = ?                             ");
        buf.append("           AND b.portCode IN ( SELECT * FROM TABLE(?) )     AND B.PORTCODE  = T.ZMDM                             ");
        buf.append("         GROUP BY                            ");
        buf.append("           ZMDM,                            ");
        buf.append("           RQ,                            ");
        buf.append("           TISMA,                            ");
        buf.append("           ZQID,                            ");
        buf.append("           TZFX,                             ");
        buf.append("         b.c_t_code                             ");
        buf.append(" )t                            ");
        System.out.println(buf.toString());
        //return buf.toString();





    }
}
